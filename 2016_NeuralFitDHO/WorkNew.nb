(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    109979,       2505]
NotebookOptionsPosition[    105351,       2390]
NotebookOutlinePosition[    105707,       2406]
CellTagsIndexPosition[    105664,       2403]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DHO FUNCTIONS", "Section",
 CellChangeTimes->{{3.700059748097416*^9, 3.700059775682741*^9}, {
  3.704795061435886*^9, 3.704795066003441*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ARange", "[", 
    RowBox[{"min_", ",", "max_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"min", "+", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"max", "-", "min"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}], "*", "i"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704954467657235*^9, 
  3.704954541122036*^9}},ExpressionUUID->"dd7f371d-1170-46c9-abd3-\
c5f1f59707e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0424\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:043a\:043e\:043d\:0441\:0442\:0440\:0443\:0438\:0440\:0443\:044e\:0449\
\:0430\:044f", " ", "\:0444\:043e\:0440\:043c\:0443\:043b\:0443", " ", 
     "\:0438\:0437", " ", "dhocount", " ", 
     "\:0441\:043b\:0430\:0433\:0430\:0435\:043c\:044b\:0445"}], "-", 
    "\:043f\:0438\:043a\:043e\:0432"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DHOConstruct", "[", "dhocount_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vars", ",", "csum"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vars", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<E\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<A\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<G\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "dhocount"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"csum", "=", 
        RowBox[{"Total", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Ex", "^", "2"}], "*", 
            RowBox[{
             RowBox[{
              RowBox[{"vars", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "*", 
            RowBox[{
             RowBox[{"vars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{
             RowBox[{
              RowBox[{"vars", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Ex", "^", "2"}], "-", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], ")"}], "^", 
                "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ex", "*", 
                  RowBox[{
                   RowBox[{"vars", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], 
              ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dhocount"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"csum", ",", 
          RowBox[{"Flatten", "[", "vars", "]"}]}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.686742428076049*^9, 3.686742429252061*^9}, {
  3.686742502907961*^9, 3.68674252212731*^9}, {3.686742557448765*^9, 
  3.686742683348942*^9}, {3.687627688799675*^9, 3.687627713168985*^9}, {
  3.6876277801986*^9, 3.6876277850618267`*^9}, {3.687627893846479*^9, 
  3.687627931016924*^9}, {3.694764696381125*^9, 
  3.69476475945407*^9}},ExpressionUUID->"02f2345c-9853-41f5-aa18-\
da1442bf0764"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "\:0424\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:043a\:043e\:043d\:0441\:0442\:0440\:0443\:0438\:0440\:0443\:044e\:0449\
\:0430\:044f", " ", "\:0441\:043f\:0438\:0441\:043e\:043a", " ", 
     "\:0438\:0437", " ", "traincount", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:043e\:0432", " ", 
     "\:0434\:043b\:044f", " ", 
     "\:0442\:0440\:0435\:043d\:0438\:0440\:043e\:0432\:043a\:0438", " ", 
     RowBox[{
     "\:0441\:0435\:0442\:0438", ".", " ", 
      "\:041a\:0430\:0436\:0434\:044b\:0439"}], " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432"}], " ", "-", " ", 
    RowBox[{
    "\:044d\:0442\:043e", " ", 
     "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "\:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:043d\:044b\:0435", " ",
      "\:043f\:043e", " ", "\:0444\:043e\:0440\:043c\:0443\:043b\:0435", " ", 
     "\:0438\:0437", " ", "dhocount", " ", 
     "\:0441\:043b\:0430\:0433\:0430\:0435\:043c\:044b\:0445"}], "-", 
    RowBox[{
    "\:043f\:0438\:043a\:043e\:0432", " ", "\:043d\:0430", " ", 
     "\:043f\:0440\:043e\:043c\:0435\:0436\:0443\:0442\:043a\:0435", " ", 
     "\:043e\:0442", " ", "low", " ", "\:0434\:043e", " ", "high", " ", 
     "\:043f\:043e", " ", "\:043e\:0441\:0438", " ", 
     RowBox[{
     "\:0430\:0431\:0441\:0446\:0438\:0441\:0441", ".", " ", 
      "\:0420\:0430\:0437\:043c\:0435\:0440"}], " ", 
     "\:043a\:0430\:0436\:0434\:043e\:0433\:043e", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:0430"}], " ", "-", " ", 
    RowBox[{"pointcount", " ", 
     RowBox[{
     "\:0442\:043e\:0447\:0435\:043a", ".", " ", "\:0412\:0441\:0435"}], " ", 
     "\:043f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b", " ", "DHO"}], 
    "-", 
    RowBox[{
    "\:0444\:0443\:043d\:043a\:0446\:0438\:0439", " ", 
     "\:0432\:044b\:0431\:0438\:0440\:0430\:044e\:0442\:0441\:044f", " ", 
     "\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:044b\:043c", " ", 
     RowBox[{"\:043e\:0431\:0440\:0430\:0437\:043e\:043c", "."}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6947647764179363`*^9, 3.6947648503449907`*^9}, {
  3.694764881491235*^9, 3.694764963004775*^9}, {3.694768531203835*^9, 
  3.694768553168971*^9}, {3.7048078071476603`*^9, 3.7048078256905193`*^9}, {
  3.7048145335406237`*^9, 
  3.704814535250609*^9}},ExpressionUUID->"91741d95-17dc-4664-a37d-\
bf85b4e39e6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrainList", "[", 
    RowBox[{
    "dhocount_", ",", "traincount_", ",", "low_", ",", "high_", ",", 
     "pointcount_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fun", ",", "vars", ",", "list", ",", "fun1", ",", "rules", ",", 
       "values"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fun", ",", "vars"}], "}"}], "=", 
       RowBox[{"DHOConstruct", "[", "dhocount", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"values", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"3", "*", "dhocount"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"values", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", 
            RowBox[{"3", "*", "dhocount"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "All", ";;", "3"}], "]"}], "]"}], "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"low", ",", " ", "high"}], "}"}], ",", "dhocount"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rules", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"vars", ",", "values"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fun1", "=", 
          RowBox[{"fun", "/.", "rules"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"list", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"fun1", "/.", 
               RowBox[{"Ex", "\[Rule]", "#"}]}], "&"}], ",", 
             RowBox[{"ARange", "[", 
              RowBox[{"low", ",", "high", ",", "pointcount"}], "]"}]}], 
            "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "traincount"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{"Max", "[", "#", "]"}]}], "&"}], ",", "list"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.687626538438561*^9, 3.6876265730930223`*^9}, {
   3.687627229699974*^9, 3.687627284794516*^9}, {3.687627405421048*^9, 
   3.687627421771596*^9}, {3.68762749115893*^9, 3.687627541110567*^9}, {
   3.687627594730301*^9, 3.6876276358535137`*^9}, {3.6876277308041773`*^9, 
   3.68762774750273*^9}, {3.6876279479914227`*^9, 3.6876279853200293`*^9}, {
   3.687628070841749*^9, 3.687628076336288*^9}, {3.6876284548485117`*^9, 
   3.6876286271599817`*^9}, {3.687629434307221*^9, 3.687629435617939*^9}, {
   3.687629497018607*^9, 3.687629549964437*^9}, {3.6876296443949738`*^9, 
   3.687629688304695*^9}, {3.687629752249302*^9, 3.6876297965131607`*^9}, {
   3.687673308085579*^9, 3.6876733500740433`*^9}, 3.6876734714464483`*^9, {
   3.687673880859749*^9, 3.68767388362042*^9}, {3.6876739184977417`*^9, 
   3.687673947003565*^9}, {3.687674040772496*^9, 3.687674090309844*^9}, 
   3.687674185602207*^9, {3.7047957034624*^9, 3.704795754378832*^9}, {
   3.704807726289236*^9, 3.704807744353056*^9}, {3.7048077827355223`*^9, 
   3.704807797801621*^9}, {3.704807834107633*^9, 3.7048078540003653`*^9}, {
   3.704807934323567*^9, 3.704807937043622*^9}, {3.704808827620625*^9, 
   3.704808833083788*^9}, {3.7048145414038773`*^9, 3.7048145417394257`*^9}, {
   3.704814577330085*^9, 3.704814577498775*^9}, {3.704954585641604*^9, 
   3.70495458942257*^9}},ExpressionUUID->"3ba6eb88-7c3b-4575-92e2-\
cf241014ee10"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "\:0424\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:043a\:043e\:043d\:0441\:0442\:0440\:0443\:0438\:0440\:0443\:044e\:0449\
\:0430\:044f", " ", "\:0441\:043f\:0438\:0441\:043e\:043a", " ", 
     "\:0438\:0437", " ", "traincount", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:043e\:0432", " ", 
     "\:0434\:043b\:044f", " ", 
     "\:0442\:0440\:0435\:043d\:0438\:0440\:043e\:0432\:043a\:0438", " ", 
     RowBox[{
     "\:0441\:0435\:0442\:0438", ".", " ", 
      "\:041a\:0430\:0436\:0434\:044b\:0439"}], " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432"}], " ", "-", " ", 
    RowBox[{
    "\:044d\:0442\:043e", " ", 
     "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "\:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:043d\:044b\:0435", " ",
      "\:043f\:043e", " ", "\:0444\:043e\:0440\:043c\:0443\:043b\:0435", " ", 
     "\:0438\:0437", " ", "dhocount", " ", 
     "\:0441\:043b\:0430\:0433\:0430\:0435\:043c\:044b\:0445"}], "-", 
    RowBox[{
    "\:043f\:0438\:043a\:043e\:0432", " ", "\:043d\:0430", " ", 
     "\:043f\:0440\:043e\:043c\:0435\:0436\:0443\:0442\:043a\:0435", " ", 
     "\:043e\:0442", " ", "low", " ", "\:0434\:043e", " ", "high", " ", 
     "\:043f\:043e", " ", "\:043e\:0441\:0438", " ", 
     RowBox[{
     "\:0430\:0431\:0441\:0446\:0438\:0441\:0441", ".", " ", 
      "\:0420\:0430\:0437\:043c\:0435\:0440"}], " ", 
     "\:043a\:0430\:0436\:0434\:043e\:0433\:043e", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:0430"}], " ", "-", " ", 
    RowBox[{"pointcount", " ", 
     RowBox[{
     "\:0442\:043e\:0447\:0435\:043a", ".", " ", 
      "\:041f\:043e\:0442\:043e\:043c"}], " ", "\:043e\:043d", " ", 
     "\:0440\:0430\:0437\:0434\:0435\:043b\:0438\:0442\:0441\:044f", " ", 
     "\:043d\:0430", " ", "div", " ", 
     RowBox[{
     "\:0447\:0430\:0441\:0442\:0435\:0439", ".", " ", "\:0412\:0441\:0435"}],
      " ", "\:043f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b", " ", 
     "DHO"}], "-", 
    RowBox[{
    "\:0444\:0443\:043d\:043a\:0446\:0438\:0439", " ", 
     "\:0432\:044b\:0431\:0438\:0440\:0430\:044e\:0442\:0441\:044f", " ", 
     "\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:044b\:043c", " ", 
     RowBox[{"\:043e\:0431\:0440\:0430\:0437\:043e\:043c", "."}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6947647764179363`*^9, 3.6947648503449907`*^9}, {
  3.694764881491235*^9, 3.694764963004775*^9}, {3.694768531203835*^9, 
  3.694768553168971*^9}, {3.7048078071476603`*^9, 
  3.7048078256905193`*^9}},ExpressionUUID->"28fd8cdd-72bc-44c4-afc1-\
2869eaa5881d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrainList", "[", 
    RowBox[{
    "dhocount_", ",", "traincount_", ",", "low_", ",", "high_", ",", 
     "pointcount_", ",", "div_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fun", ",", "vars", ",", "list", ",", "fun1", ",", "rules", ",", 
       "values"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fun", ",", "vars"}], "}"}], "=", 
       RowBox[{"DHOConstruct", "[", "dhocount", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"values", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"3", "*", "dhocount"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"values", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", 
            RowBox[{"3", "*", "dhocount"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"values", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "All", ";;", "3"}], "]"}], "]"}], "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"low", ",", " ", "high"}], "}"}], ",", "dhocount"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rules", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"vars", ",", "values"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fun1", "=", 
          RowBox[{"fun", "/.", "rules"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"list", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"fun1", "/.", 
               RowBox[{"Ex", "\[Rule]", "#"}]}], "&"}], ",", 
             RowBox[{"ARange", "[", 
              RowBox[{"low", ",", "high", ",", "pointcount"}], "]"}]}], 
            "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "traincount"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{"Max", "[", "#", "]"}]}], "&"}], ",", "list"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Image", "[", 
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", "div"}], "]"}], "]"}], "&"}], ",", "list"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.687626538438561*^9, 3.6876265730930223`*^9}, {
   3.687627229699974*^9, 3.687627284794516*^9}, {3.687627405421048*^9, 
   3.687627421771596*^9}, {3.68762749115893*^9, 3.687627541110567*^9}, {
   3.687627594730301*^9, 3.6876276358535137`*^9}, {3.6876277308041773`*^9, 
   3.68762774750273*^9}, {3.6876279479914227`*^9, 3.6876279853200293`*^9}, {
   3.687628070841749*^9, 3.687628076336288*^9}, {3.6876284548485117`*^9, 
   3.6876286271599817`*^9}, {3.687629434307221*^9, 3.687629435617939*^9}, {
   3.687629497018607*^9, 3.687629549964437*^9}, {3.6876296443949738`*^9, 
   3.687629688304695*^9}, {3.687629752249302*^9, 3.6876297965131607`*^9}, {
   3.687673308085579*^9, 3.6876733500740433`*^9}, 3.6876734714464483`*^9, {
   3.687673880859749*^9, 3.68767388362042*^9}, {3.6876739184977417`*^9, 
   3.687673947003565*^9}, {3.687674040772496*^9, 3.687674090309844*^9}, 
   3.687674185602207*^9, {3.7047957034624*^9, 3.704795754378832*^9}, {
   3.704807726289236*^9, 3.704807744353056*^9}, {3.7048077827355223`*^9, 
   3.704807797801621*^9}, {3.704807834107633*^9, 3.7048078540003653`*^9}, {
   3.704807934323567*^9, 3.704807937043622*^9}, {3.704808827620625*^9, 
   3.704808833083788*^9}, {3.70495459356185*^9, 
   3.704954597278577*^9}},ExpressionUUID->"209992c1-10c5-4788-9e9f-\
fb4797f579af"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "\:0424\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:043a\:043e\:043d\:0441\:0442\:0440\:0443\:0438\:0440\:0443\:044e\:0449\
\:0430\:044f", " ", "\:0441\:043f\:0438\:0441\:043e\:043a", " ", 
     "\:0438\:0437", " ", "traincount", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:043e\:0432", " ", 
     "\:0434\:043b\:044f", " ", 
     "\:0442\:0440\:0435\:043d\:0438\:0440\:043e\:0432\:043a\:0438", " ", 
     RowBox[{
     "\:0441\:0435\:0442\:0438", ".", " ", 
      "\:041a\:0430\:0436\:0434\:044b\:0439"}], " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432"}], " ", "-", " ", 
    RowBox[{
    "\:044d\:0442\:043e", " ", 
     "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "\:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:043d\:044b\:0435", " ",
      "\:043f\:043e", " ", "\:0444\:043e\:0440\:043c\:0443\:043b\:0435", " ", 
     
     RowBox[{"\:0438\:0437", " ", "[", 
      RowBox[{"1", ",", "maxdhocount"}], "]"}], " ", 
     "\:0441\:043b\:0430\:0433\:0430\:0435\:043c\:044b\:0445"}], "-", 
    RowBox[{
    "\:043f\:0438\:043a\:043e\:0432", " ", "\:043d\:0430", " ", 
     "\:043f\:0440\:043e\:043c\:0435\:0436\:0443\:0442\:043a\:0435", " ", 
     "\:043e\:0442", " ", "low", " ", "\:0434\:043e", " ", "high", " ", 
     "\:043f\:043e", " ", "\:043e\:0441\:0438", " ", 
     RowBox[{
     "\:0430\:0431\:0441\:0446\:0438\:0441\:0441", ".", " ", 
      "\:0420\:0430\:0437\:043c\:0435\:0440"}], " ", 
     "\:043a\:0430\:0436\:0434\:043e\:0433\:043e", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:0430"}], " ", "-", " ", 
    RowBox[{"pointcount", " ", 
     RowBox[{
     "\:0442\:043e\:0447\:0435\:043a", ".", " ", "\:0412\:0441\:0435"}], " ", 
     "\:043f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b", " ", "DHO"}], 
    "-", 
    RowBox[{
    "\:0444\:0443\:043d\:043a\:0446\:0438\:0439", " ", 
     "\:0432\:044b\:0431\:0438\:0440\:0430\:044e\:0442\:0441\:044f", " ", 
     "\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:044b\:043c", " ", 
     RowBox[{"\:043e\:0431\:0440\:0430\:0437\:043e\:043c", "."}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6947650296554737`*^9, 3.694765062561105*^9}, 
   3.694768561969413*^9, {3.704807919179989*^9, 3.704807929346512*^9}, 
   3.7048145607397203`*^9},ExpressionUUID->"7208403b-7859-4cbb-80d9-\
6e6f1a35ac67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructTrainSet", "[", 
   RowBox[{
   "maxdhocount_", ",", "traincount_", ",", "low_", ",", "high_", ",", 
    "pointcount_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trainlist", ",", "list"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"trainlist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"TrainList", "[", 
          RowBox[{
          "dc", ",", "traincount", ",", "low", ",", "high", ",", 
           "pointcount"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"trainlist", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", "dc"}], "&"}], ",", "list"}], "]"}]}], 
         "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dc", ",", "maxdhocount"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"trainlist", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.687673561665133*^9, 3.687673600813747*^9}, {
  3.687673739799245*^9, 3.687673853567939*^9}, {3.687674242982699*^9, 
  3.6876742807918253`*^9}, {3.687674404245948*^9, 3.687674415501113*^9}, {
  3.687674447491021*^9, 3.687674453002842*^9}, {3.7048078997494707`*^9, 
  3.70480790196386*^9}, {3.704808002725828*^9, 3.7048080035414143`*^9}, {
  3.704814565178062*^9, 
  3.7048145691540003`*^9}},ExpressionUUID->"5e58d765-37be-4a07-9392-\
e47ab073d4e6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "\:0424\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:043a\:043e\:043d\:0441\:0442\:0440\:0443\:0438\:0440\:0443\:044e\:0449\
\:0430\:044f", " ", "\:0441\:043f\:0438\:0441\:043e\:043a", " ", 
     "\:0438\:0437", " ", "traincount", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:043e\:0432", " ", 
     "\:0434\:043b\:044f", " ", 
     "\:0442\:0440\:0435\:043d\:0438\:0440\:043e\:0432\:043a\:0438", " ", 
     RowBox[{
     "\:0441\:0435\:0442\:0438", ".", " ", 
      "\:041a\:0430\:0436\:0434\:044b\:0439"}], " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432"}], " ", "-", " ", 
    RowBox[{
    "\:044d\:0442\:043e", " ", 
     "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "\:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:043d\:044b\:0435", " ",
      "\:043f\:043e", " ", "\:0444\:043e\:0440\:043c\:0443\:043b\:0435", " ", 
     
     RowBox[{"\:0438\:0437", " ", "[", 
      RowBox[{"1", ",", "maxdhocount"}], "]"}], " ", 
     "\:0441\:043b\:0430\:0433\:0430\:0435\:043c\:044b\:0445"}], "-", 
    RowBox[{
    "\:043f\:0438\:043a\:043e\:0432", " ", "\:043d\:0430", " ", 
     "\:043f\:0440\:043e\:043c\:0435\:0436\:0443\:0442\:043a\:0435", " ", 
     "\:043e\:0442", " ", "low", " ", "\:0434\:043e", " ", "high", " ", 
     "\:043f\:043e", " ", "\:043e\:0441\:0438", " ", 
     RowBox[{
     "\:0430\:0431\:0441\:0446\:0438\:0441\:0441", ".", " ", 
      "\:0420\:0430\:0437\:043c\:0435\:0440"}], " ", 
     "\:043a\:0430\:0436\:0434\:043e\:0433\:043e", " ", 
     "\:043c\:0430\:0441\:0441\:0438\:0432\:0430"}], " ", "-", " ", 
    RowBox[{"pointcount", " ", 
     RowBox[{"\:0442\:043e\:0447\:0435\:043a", ".", " ", "\:041e\:043d"}], 
     " ", "\:0440\:0430\:0437\:0434\:0435\:043b\:0435\:043d", " ", 
     "\:043d\:0430", " ", "div", " ", 
     RowBox[{
     "\:0447\:0430\:0441\:0442\:0435\:0439", ".", " ", "\:0412\:0441\:0435"}],
      " ", "\:043f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b", " ", 
     "DHO"}], "-", 
    RowBox[{
    "\:0444\:0443\:043d\:043a\:0446\:0438\:0439", " ", 
     "\:0432\:044b\:0431\:0438\:0440\:0430\:044e\:0442\:0441\:044f", " ", 
     "\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:044b\:043c", " ", 
     RowBox[{"\:043e\:0431\:0440\:0430\:0437\:043e\:043c", "."}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6947650296554737`*^9, 3.694765062561105*^9}, 
   3.694768561969413*^9, {3.704807919179989*^9, 
   3.704807929346512*^9}},ExpressionUUID->"915dc593-97cd-482f-9a64-\
b903fb639651"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructTrainSet", "[", 
   RowBox[{
   "maxdhocount_", ",", "traincount_", ",", "low_", ",", "high_", ",", 
    "pointcount_", ",", "div_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trainlist", ",", "list"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"trainlist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"TrainList", "[", 
          RowBox[{
          "dc", ",", "traincount", ",", "low", ",", "high", ",", "pointcount",
            ",", "div"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"trainlist", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", "dc"}], "&"}], ",", "list"}], "]"}]}], 
         "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dc", ",", "maxdhocount"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"trainlist", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.687673561665133*^9, 3.687673600813747*^9}, {
  3.687673739799245*^9, 3.687673853567939*^9}, {3.687674242982699*^9, 
  3.6876742807918253`*^9}, {3.687674404245948*^9, 3.687674415501113*^9}, {
  3.687674447491021*^9, 3.687674453002842*^9}, {3.7048078997494707`*^9, 
  3.70480790196386*^9}, {3.704808002725828*^9, 
  3.7048080035414143`*^9}},ExpressionUUID->"320996fe-f311-4ff8-9dbb-\
f4f81739d2ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CNN EXAMPLE", "Section",
 CellChangeTimes->{{3.700059748097416*^9, 3.700059754868718*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resource", "=", 
   RowBox[{"ResourceObject", "[", "\"\<MNIST\>\"", "]"}]}], ";", 
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TrainingData\>\""}], "]"}]}], ";", 
  RowBox[{"testData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70005959444916*^9, 3.700059594450816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"trainingData", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.700059604786111*^9, 3.7000596047878027`*^9}, 
   3.704794976316546*^9}],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"Null", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{
  3.700061463021357*^9, {3.704794969436445*^9, 3.704794977306233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", "10", 
      ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7000596131285067`*^9, 3.7000596131301537`*^9}, {
  3.7048147449758263`*^9, 3.704814780021491*^9}, {3.704956209189855*^9, 
  3.704956216493235*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"Specification \
\\!\\(\\*TagBox[RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", \\\"100\\\", \\\"}\\\"}]}], Function[Short[Slot[1], \
5]]]\\) should describe \
\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\
\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"a \
rank\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)-\\\\\\\\!\\\\\
\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\"}]\\\\\\\\) tensor\\\\\
\\\"\\\", StringForm[\\\"``-`` ``\\\", StringForm[\\\"a ``\\\", \
\\\"rank\\\"], 3, \\\"tensor\\\"], Rule[Editable, False]]\\).\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetChain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"Specification \
\\!\\(\\*TagBox[RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", \\\"100\\\", \\\"}\\\"}]}], Function[Short[Slot[1], \
5]]]\\) should describe \
\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\
\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"a \
rank\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)-\\\\\\\\!\\\\\
\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\"}]\\\\\\\\) tensor\\\\\
\\\"\\\", StringForm[\\\"``-`` ``\\\", StringForm[\\\"a ``\\\", \
\\\"rank\\\"], 3, \\\"tensor\\\"], Rule[Editable, False]]\\).\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetChain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  Failure[NetChain, 
   Association[
   "MessageTemplate" :> MessageName[NetChain, "netinvportshape"], 
    "MessageParameters" :> {"Input" -> {100}, 
      StringForm["``-`` ``", 
       StringForm["a ``", "rank"], 3, "tensor"]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.704798208408514*^9, {3.7048147468740683`*^9, 3.704814780986863*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"28", "*", "28"}]], "Input",
 CellChangeTimes->{{3.704798289081974*^9, 3.7047982919154387`*^9}}],

Cell[BoxData["784"], "Output",
 CellChangeTimes->{3.704798292523485*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"lenet", ",", "trainingData", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.700059626178177*^9, 3.700059626179809*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgs", "=", 
   RowBox[{"Keys", "@", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"testData", ",", "5"}], "]"}]}]}], ";", 
  RowBox[{"Thread", "[", 
   RowBox[{"imgs", "\[Rule]", 
    RowBox[{"lenet", "[", "imgs", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.700059634891631*^9, 3.7000596348932877`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CNN DHO", "Section",
 CellChangeTimes->{{3.700059748097416*^9, 3.700059775682741*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pointcount", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxdhocount", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"div", "=", "20"}], ";"}]}], "Input",
 CellChangeTimes->{{3.704795475132471*^9, 3.704795497447154*^9}, 
   3.70479830057375*^9, {3.704798495333982*^9, 3.704798495669734*^9}, {
   3.704807956657465*^9, 3.704807965336876*^9}, {3.704809947740259*^9, 
   3.704809955354313*^9}},ExpressionUUID->"3ce18770-87f8-44de-8e8e-\
56ef72e87170"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ConstructTrainSet", "[", 
    RowBox[{
    "maxdhocount", ",", "10000", ",", "1", ",", "10", ",", "pointcount", ",", 
     "div"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704795115608938*^9, 3.704795132619377*^9}, 
   3.704795258625332*^9, {3.7047954843789186`*^9, 3.704795500784531*^9}, {
   3.704807970578547*^9, 3.7048079712984457`*^9}, 3.704808170667039*^9, 
   3.704809513142692*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ConstructTrainSet", "[", 
    RowBox[{
    "maxdhocount", ",", "20", ",", "1", ",", "10", ",", "pointcount", ",", 
     "div"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7048090636886272`*^9, 3.704809079758697*^9}, {
  3.7048092570527573`*^9, 3.704809257196809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", 
      "maxdhocount", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "maxdhocount"}], "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pointcount", "/", "div"}], ",", "div"}], "}"}], ",", 
        "\"\<Grayscale\>\""}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7000596131285067`*^9, 3.7000596131301537`*^9}, {
   3.704795274018918*^9, 3.704795275894313*^9}, {3.704795471386681*^9, 
   3.704795473272946*^9}, 3.704795516811771*^9, {3.704795789682795*^9, 
   3.704795791290668*^9}, {3.704798488433181*^9, 3.704798491150353*^9}, {
   3.7047985223801727`*^9, 3.704798525883791*^9}, {3.704798558961182*^9, 
   3.704798564272245*^9}, {3.704798681169898*^9, 3.7047987404807568`*^9}, {
   3.7047988352378693`*^9, 3.70479887061312*^9}, {3.7047990037513647`*^9, 
   3.7047990182408*^9}, {3.704799111537129*^9, 3.7047991227037487`*^9}, {
   3.704799153797737*^9, 3.704799233465712*^9}, {3.7047992724310226`*^9, 
   3.704799292286891*^9}, {3.704807246484624*^9, 3.704807248721265*^9}, {
   3.704807337120256*^9, 3.704807339639563*^9}, {3.704807414095769*^9, 
   3.70480743398131*^9}, {3.704807527658844*^9, 3.704807567745954*^9}, {
   3.7048080502144136`*^9, 3.7048081357854633`*^9}, {3.7048103447063503`*^9, 
   3.704810349400683*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"tensor", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"1", "20", "20"}, "\[Times]"], "\[VeryThinSpace]", 
                   ")"}, BaseStyle -> GrayLevel[0.5]]}]}], {
             "Inputs", "Input"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "1"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "16", "16"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "1"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "16", "16"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "2"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "8", "8"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "4"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "4", "4"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["5", 
              GrayLevel[0.5]], {"Layers", "5"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "5"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "4", "4"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "5"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["6", 
              GrayLevel[0.5]], {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "2", "2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "6"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["7", 
              GrayLevel[0.5]], {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[FlattenLayer, {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"200"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "7"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["8", 
              GrayLevel[0.5]], {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "8"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["9", 
              GrayLevel[0.5]], {"Layers", "9"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "9"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "9"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["10", 
              GrayLevel[0.5]], {"Layers", "10"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "10"}, "Mouse"], "LinkHand"], 
           
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"4"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "10"}, "Mouse"], "LinkHand"]}, {
          
           MouseAppearance[
            Annotation[
             Style["11", 
              GrayLevel[0.5]], {"Layers", "11"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "11"}, "Mouse"], "LinkHand"], 
           
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"4"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "11"}, "Mouse"], "LinkHand"]}, {
          
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"4"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association["Weights" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`ChannelT[1, 
                  NeuralNetworks`TensorT[2, {5, 5}]]], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {20}]]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 1, "$GroupNumber" -> 
               1, "$InputSize" -> {20, 20}, "$OutputSize" -> {16, 16}], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[1, 
                 NeuralNetworks`TensorT[2, {20, 20}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {16, 16}]]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {20, 16, 16}, "$Rank" -> 
               3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {16, 16}]]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[3, {20, 16, 16}]]], "3" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
               "$InputSize" -> {16, 16}, "$OutputSize" -> {8, 8}], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[3, {20, 16, 16}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {8, 8}]]]], "4" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association["Weights" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`ChannelT[20, 
                  NeuralNetworks`TensorT[2, {5, 5}]]], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {50}]]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 20, "$GroupNumber" -> 
               1, "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {8, 8}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {4, 4}]]]], "5" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {50, 4, 4}, "$Rank" -> 3], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {4, 4}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[3, {50, 4, 4}]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 50, 
               "$InputSize" -> {4, 4}, "$OutputSize" -> {2, 2}], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[3, {50, 4, 4}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {2, 2}]]]], "7" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Dimensions" -> {50, 2, 2}, "$Rank" -> 3, "$OutputSize" -> 200],
              "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {2, 2}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {200}]]], "8" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {500, 200}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {500}]]], "Parameters" -> 
             Association["Size" -> 500, "$InputSize" -> 200], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {200}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {500}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "10" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {4, 500}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {4}]]], "Parameters" -> 
             Association["Size" -> 4, "$InputSize" -> 500], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {4}]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 4], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {4}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {4}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Layers", "5", "Inputs", "Input"] -> 
           NetPort["Layers", "4", "Outputs", "Output"], 
           NetPort["Layers", "6", "Inputs", "Input"] -> 
           NetPort["Layers", "5", "Outputs", "Output"], 
           NetPort["Layers", "7", "Inputs", "Input"] -> 
           NetPort["Layers", "6", "Outputs", "Output"], 
           NetPort["Layers", "8", "Inputs", "Input"] -> 
           NetPort["Layers", "7", "Outputs", "Output"], 
           NetPort["Layers", "9", "Inputs", "Input"] -> 
           NetPort["Layers", "8", "Outputs", "Output"], 
           NetPort["Layers", "10", "Inputs", "Input"] -> 
           NetPort["Layers", "9", "Outputs", "Output"], 
           NetPort["Layers", "11", "Inputs", "Input"] -> 
           NetPort["Layers", "10", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "11", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Image", 
              Association[
              "Parameters" -> 
               Association[
                "ImageSize" -> {20, 20}, "ColorSpace" -> "Grayscale", 
                 "ColorChannels" -> 1, "$AugmentationFunction" -> None, 
                 "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
               NeuralNetworks`ChannelT[1, 
                 NeuralNetworks`TensorT[2, {20, 20}]]]], 
             NeuralNetworks`ChannelT[1, 
              NeuralNetworks`TensorT[2, {20, 20}]]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {1, 2, 3, 4}, "Dimensions" -> 4], 
               "Input" -> NeuralNetworks`TensorT[1, {4}]]], 
             NeuralNetworks`TensorT[1, {4}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{565., {103.4169921875, 108.5830078125}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.704795815269568*^9, 3.70479835230792*^9, {3.7047985175256147`*^9, 
   3.704798528803516*^9}, 3.704798567091539*^9, 3.704798682173314*^9, {
   3.70479871934521*^9, 3.704798741257969*^9}, {3.7047988367299223`*^9, 
   3.704798854682365*^9}, {3.704799006234292*^9, 3.7047990187928953`*^9}, {
   3.7047991249252567`*^9, 3.7047991876239443`*^9}, {3.7047992185179987`*^9, 
   3.7047992340840473`*^9}, {3.7047992756239433`*^9, 3.7047992928356743`*^9}, 
   3.704807249378016*^9, {3.704807416744081*^9, 3.704807434319018*^9}, {
   3.704807531180543*^9, 3.70480756972723*^9}, 3.704808065042128*^9, {
   3.704808118746292*^9, 3.704808136717699*^9}, 3.7048088658483963`*^9, 
   3.704809708495412*^9, {3.7048103341036654`*^9, 
   3.704810350355294*^9}},ExpressionUUID->"dc87c6d5-6d09-49b4-b194-\
3d66aa74fc81"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"lenet", ",", "trainingData", ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "5"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.700059626178177*^9, 3.700059626179809*^9}, 
   3.704808160610162*^9, 3.704810462826741*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"lenet", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "testData"}], "]"}], 
    ",", "True"}], "]"}], "/", 
  RowBox[{"N", "[", 
   RowBox[{"Length", "[", "testData", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704809109762444*^9, 3.704809116599584*^9}, {
  3.704809184416377*^9, 3.704809215681669*^9}, {3.704809442103674*^9, 
  3.704809450173192*^9}, {3.704809525626917*^9, 3.7048095453285217`*^9}, {
  3.70480981010435*^9, 3.704809813192288*^9}, {3.704809885234892*^9, 
  3.70480991941422*^9}}],

Cell[BoxData["0.6000000000000001`"], "Output",
 CellChangeTimes->{
  3.704809117161865*^9, 3.70480921697718*^9, 3.704809451299383*^9, 
   3.704809783660892*^9, 3.7048098139558773`*^9, {3.704809900061062*^9, 
   3.704809919959643*^9}, 3.704810745554982*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pointcount", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxdhocount", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ConstructTrainSet", "[", 
    RowBox[{
    "maxdhocount", ",", "10000", ",", "1", ",", "10", ",", "pointcount"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ConstructTrainSet", "[", 
    RowBox[{
    "maxdhocount", ",", "20", ",", "1", ",", "10", ",", "pointcount"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704795115608938*^9, 3.704795132619377*^9}, 
   3.704795258625332*^9, {3.7047954843789186`*^9, 3.704795500784531*^9}, {
   3.704807970578547*^9, 3.7048079712984457`*^9}, 3.704808170667039*^9, 
   3.704809513142692*^9, {3.704814938116869*^9, 3.7048149898424597`*^9}, 
   3.704955170977654*^9},ExpressionUUID->"218e3b8b-f757-41bb-b208-\
02af0e4144d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DotPlusLayer", "[", 
       RowBox[{"50", ",", 
        RowBox[{"\"\<Input\>\"", "\[Rule]", "pointcount"}]}], "]"}], ",", 
      RowBox[{"DotPlusLayer", "[", "maxdhocount", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "pointcount"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "maxdhocount"}], "]"}]}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7048149260385637`*^9, 3.704814926325832*^9}, {
  3.704815061003111*^9, 3.704815079191115*^9}, {3.704815112830494*^9, 
  3.7048151461597967`*^9}, {3.7049540895474157`*^9, 3.704954095892305*^9}, {
  3.704954878982889*^9, 3.704954895302883*^9}, {3.704954995968157*^9, 
  3.70495501409053*^9}, {3.704955123973977*^9, 3.704955146211767*^9}, {
  3.704955423018816*^9, 3.704955467495516*^9}, {3.704955518955494*^9, 
  3.7049555195998898`*^9}},ExpressionUUID->"cd04710c-bfdb-42ac-83be-\
d55ad7984632"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 100}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
               100, "$InputDimensions" -> {100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], "2" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{4, 50}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
               50, "$InputDimensions" -> {50}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]],
            "3" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association["Labels" -> {1, 2, 3, 4}, "Dimensions" -> 4], 
             NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{174., {39.4169921875, 44.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.704815116181374*^9, 3.7048151482484827`*^9, 3.704815220405868*^9, 
   3.704954116481131*^9, 3.704954653285783*^9, 3.704954804771359*^9, 
   3.7049548991903954`*^9, {3.7049550036253223`*^9, 3.704955015278119*^9}, {
   3.704955128472207*^9, 3.704955148885997*^9}, 3.704955304554531*^9, 
   3.70495546843692*^9, 3.7049555204623957`*^9, 3.704956143924129*^9, 
   3.704961746363749*^9, 
   3.7049633768694067`*^9},ExpressionUUID->"eaed4b82-8ef2-4061-ac16-\
099a5c0bf135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", 
      "maxdhocount", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "maxdhocount"}], "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"pointcount", ",", "1"}], "}"}], ",", "\"\<Grayscale\>\""}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704955776546775*^9, 3.7049557867846413`*^9}, {
   3.704955857081725*^9, 3.7049558846134233`*^9}, {3.704956193884656*^9, 
   3.704956193975222*^9}, {3.704956252540402*^9, 3.704956264858931*^9}, {
   3.7049563150911922`*^9, 3.7049563151723833`*^9}, 
   3.704956488052887*^9},ExpressionUUID->"a53f1349-223c-4ff3-9367-\
39708418cc11"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{20, 1, 1, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {1, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {1, 100}, 
               "$OutputSize" -> {1, 96}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 1, 100}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 1, 96}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 1, 96}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 1, 96}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 1, 96}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {1, 96}, 
               "$OutputSize" -> {1, 48}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 1, 96}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 1, 48}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 20, 1, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {1, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {1, 48}, 
               "$OutputSize" -> {1, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 1, 48}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 1, 44}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 1, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 1, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 1, 44}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {1, 44}, 
               "$OutputSize" -> {1, 22}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 1, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 1, 22}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {1100}, 
               "$InputSize" -> {50, 1, 22}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 1, 22}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1100}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{500, 1100}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               1100, "$InputDimensions" -> {1100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1100}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{4, 500}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]],
            "11" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {100, 1}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 1, 100}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association["Labels" -> {1, 2, 3, 4}, "Dimensions" -> 4], 
             NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"1\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"1\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"1\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"1\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"1\"", "\"44\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"1\"", "\"44\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"1\"", "\"22\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{238., {106.4169921875, 111.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.704963472319168*^9},ExpressionUUID->"db4e0414-5f68-4971-967e-\
d90b4724c06a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenett", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "trainingData", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7048152015161667`*^9, {3.704956345487884*^9, 
   3.704956352141643*^9}},ExpressionUUID->"2592c056-c706-45b7-862e-\
4271fb6029d8"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.704815202014978*^9, 3.704954142276651*^9, 3.7049546599319983`*^9, 
   3.704954807776353*^9, 3.704955020569623*^9, 3.704955153664814*^9, 
   3.704955327164857*^9, 3.704955490784523*^9, 3.704955536232134*^9, 
   3.704956058155323*^9, {3.704956110140514*^9, 3.704956122171069*^9}, 
   3.704956160146798*^9, 3.70495627470356*^9, {3.704956320528563*^9, 
   3.7049563599495983`*^9}, 3.704956493494987*^9, 3.70496164220473*^9, 
   3.704963383055525*^9, 
   3.704963499992393*^9},ExpressionUUID->"e0d35c9f-cc87-45cf-8eb4-\
54418cb3a7a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{"lenett", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "testData"}], "]"}], 
    ",", "True"}], "]"}], "/", 
  RowBox[{"N", "[", 
   RowBox[{"Length", "[", "testData", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7049546859461193`*^9, 3.704954695049294*^9}, 
   3.704954856367919*^9, {3.704955036225149*^9, 3.704955113970645*^9}, {
   3.704955341061668*^9, 3.704955347565127*^9}, 
   3.7049634444950666`*^9},ExpressionUUID->"faf7a8d7-8811-425e-bb3f-\
9d6e9099085d"],

Cell[BoxData["0.225`"], "Output",
 CellChangeTimes->{
  3.704815193832657*^9, {3.704954667452512*^9, 3.704954696087901*^9}, 
   3.704954857370285*^9, {3.7049550249457207`*^9, 3.70495511512589*^9}, 
   3.704955160692136*^9, {3.704955330767096*^9, 3.704955348045882*^9}, 
   3.7049554948692904`*^9, 3.704955538582631*^9, 3.7049561662318287`*^9, 
   3.704963386662414*^9, 
   3.704963444771419*^9},ExpressionUUID->"73e78efe-8eea-44ad-b7f4-\
5c0a7d844eb7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1029, 664},
WindowMargins->{{Automatic, 106}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 177, 3, 68, "Section", "ExpressionUUID" -> \
"0281d496-85a5-4fbd-b642-1acfc2f2dd6d"],
Cell[760, 27, 624, 19, 32, "Input", "ExpressionUUID" -> \
"dd7f371d-1170-46c9-abd3-c5f1f59707e4"],
Cell[1387, 48, 3632, 90, 201, "Input", "ExpressionUUID" -> \
"02f2345c-9853-41f5-aa18-da1442bf0764"],
Cell[5022, 140, 2458, 51, 96, "Input", "ExpressionUUID" -> \
"91741d95-17dc-4664-a37d-bf85b4e39e6f"],
Cell[7483, 193, 4264, 96, 327, "Input", "ExpressionUUID" -> \
"3ba6eb88-7c3b-4575-92e2-cf241014ee10"],
Cell[11750, 291, 2661, 55, 96, "Input", "ExpressionUUID" -> \
"28fd8cdd-72bc-44c4-afc1-2869eaa5881d"],
Cell[14414, 348, 4461, 103, 348, "Input", "ExpressionUUID" -> \
"209992c1-10c5-4788-9e9f-fb4797f579af"],
Cell[18878, 453, 2410, 51, 96, "Input", "ExpressionUUID" -> \
"7208403b-7859-4cbb-80d9-6e6f1a35ac67"],
Cell[21291, 506, 1730, 42, 180, "Input", "ExpressionUUID" -> \
"5e58d765-37be-4a07-9392-e47ab073d4e6"],
Cell[23024, 550, 2576, 54, 96, "Input", "ExpressionUUID" -> \
"915dc593-97cd-482f-9a64-b903fb639651"],
Cell[25603, 606, 1704, 41, 180, "Input", "ExpressionUUID" -> \
"320996fe-f311-4ff8-9dbb-f4f81739d2ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27344, 652, 126, 2, 68, "Section", "ExpressionUUID" -> \
"f24e5388-c174-41b6-a0b0-7314109a1b64"],
Cell[27473, 656, 455, 10, 75, "Input", "ExpressionUUID" -> \
"350175c4-9274-421f-8c00-2e05d9962226"],
Cell[CellGroupData[{
Cell[27953, 670, 193, 4, 32, "Input", "ExpressionUUID" -> \
"18018a20-9da3-40fe-b23b-9ef4174aa946"],
Cell[28149, 676, 183, 4, 32, "Output", "ExpressionUUID" -> \
"74c8422c-3f86-443b-b621-6cc18ef99c9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28369, 685, 1042, 25, 54, "Input", "ExpressionUUID" -> \
"2d121c06-4ebd-40e7-ae0b-49ee7e17108d"],
Cell[29414, 712, 5681, 143, 63, "Output", "ExpressionUUID" -> \
"6407c573-2cd0-45a1-a63d-54a57e2f3004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35132, 860, 119, 2, 32, "Input", "ExpressionUUID" -> \
"6b63fcbd-d197-4f68-8681-81dc05ef0905"],
Cell[35254, 864, 72, 1, 32, "Output", "ExpressionUUID" -> \
"788263a3-4479-477e-834e-6cd18f2c94c5"]
}, Open  ]],
Cell[35341, 868, 334, 8, 32, "Input", "ExpressionUUID" -> \
"80f36de9-46be-4edc-89d3-6f8d3c1c90f9"],
Cell[35678, 878, 347, 9, 32, "Input", "ExpressionUUID" -> \
"f67eb786-9edb-4754-ad94-3dd643267597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36062, 892, 122, 2, 68, "Section", "ExpressionUUID" -> \
"41479faf-fd51-4865-b81e-5b9a0610f590"],
Cell[36187, 896, 523, 11, 75, "Input", "ExpressionUUID" -> \
"3ce18770-87f8-44de-8e8e-56ef72e87170"],
Cell[36713, 909, 465, 10, 32, "Input", "ExpressionUUID" -> \
"6133e65d-cf4a-4678-a6e2-bb133cb85815"],
Cell[37181, 921, 337, 8, 32, "Input", "ExpressionUUID" -> \
"7250cc93-cbba-4374-a410-4fded3566a7a"],
Cell[CellGroupData[{
Cell[37543, 933, 2164, 44, 75, "Input", "ExpressionUUID" -> \
"e7436c3d-2ec1-4f18-a666-bc1a497e1b87"],
Cell[39710, 979, 19123, 385, 248, "Output", "ExpressionUUID" -> \
"dc87c6d5-6d09-49b4-b194-3d66aa74fc81"]
}, Open  ]],
Cell[58848, 1367, 321, 8, 32, "Input", "ExpressionUUID" -> \
"adfcf391-fca9-44cf-8ca4-f1c4f260edf5"],
Cell[CellGroupData[{
Cell[59194, 1379, 774, 20, 32, "Input", "ExpressionUUID" -> \
"df1f3a64-1fd9-4734-b2f5-f5e26c596c0a"],
Cell[59971, 1401, 256, 4, 32, "Output", "ExpressionUUID" -> \
"69fffe9e-900b-45f8-b50f-88ac255e3240"]
}, Open  ]],
Cell[60242, 1408, 948, 22, 96, "Input", "ExpressionUUID" -> \
"218e3b8b-f757-41bb-b208-02af0e4144d5"],
Cell[CellGroupData[{
Cell[61215, 1434, 1203, 26, 54, "Input", "ExpressionUUID" -> \
"cd04710c-bfdb-42ac-83be-d55ad7984632"],
Cell[62421, 1462, 10976, 232, 120, "Output", "ExpressionUUID" -> \
"eaed4b82-8ef2-4061-ac16-099a5c0bf135"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73434, 1699, 1613, 39, 75, "Input", "ExpressionUUID" -> \
"a53f1349-223c-4ff3-9367-39708418cc11"],
Cell[75050, 1740, 28025, 585, 254, "Output", "ExpressionUUID" -> \
"db4e0414-5f68-4971-967e-d90b4724c06a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103112, 2330, 339, 8, 32, "Input", "ExpressionUUID" -> \
"2592c056-c706-45b7-862e-4271fb6029d8"],
Cell[103454, 2340, 588, 10, 32, "Output", "ExpressionUUID" -> \
"e0d35c9f-cc87-45cf-8eb4-54418cb3a7a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104079, 2355, 789, 21, 32, "Input", "ExpressionUUID" -> \
"faf7a8d7-8811-425e-bb3f-9d6e9099085d"],
Cell[104871, 2378, 452, 8, 32, "Output", "ExpressionUUID" -> \
"73e78efe-8eea-44ad-b7f4-5c0a7d844eb7"]
}, Open  ]]
}, Open  ]]
}
]
*)

