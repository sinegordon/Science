(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    215017,       4354]
NotebookOptionsPosition[    212568,       4269]
NotebookOutlinePosition[    212993,       4285]
CellTagsIndexPosition[    212950,       4282]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions", "Section",
 CellChangeTimes->{{3.5303008547758102`*^9, 3.5303008652220335`*^9}, {
  3.5303026568029966`*^9, 3.530302661386202*^9}, {3.530367766528288*^9, 
  3.5303677665992928`*^9}, {3.530368287841031*^9, 3.5303682919132304`*^9}, {
  3.5304534802269907`*^9, 3.530453480976488*^9}, {3.54479089241011*^9, 
  3.544790893377205*^9}, {3.611765923158575*^9, 3.6117659241666756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6117671316444116`*^9, 3.6117671361648636`*^9}}],

Cell[BoxData["\<\"D:\\\\Dropbox\\\\new projects\\\\Ursula \
help\\\\multiraftNLLSQ for Ursula\\\\multidomain-for-ursula\"\>"], "Output",
 CellChangeTimes->{
  3.6117671364368906`*^9, 3.611775834529679*^9, 3.6118350641231213`*^9, 
   3.611841284514164*^9, 3.6118448545891356`*^9, 3.6118472636900215`*^9, 
   3.6118477235820065`*^9, 3.6118485363672767`*^9, 3.6118493306096926`*^9, 
   3.612693326158247*^9, 3.612715501783579*^9, 3.6127176944570246`*^9, 
   3.612717847703348*^9, 3.613147019304963*^9, 3.6131482232102876`*^9, 
   3.6131485810171285`*^9, 3.6131496281918354`*^9, 3.6132181380337133`*^9, 
   3.6132992821619463`*^9, 3.6133031737480707`*^9, 3.6133195840975885`*^9, 
   3.6133229467912197`*^9, 3.6133233088774295`*^9, 3.613327758427349*^9, 
   3.6133838077783976`*^9, 3.6133853038621936`*^9, 3.613389078781442*^9, 
   3.613414237283519*^9, 3.6134770353651*^9, 3.613483500002513*^9, 
   3.613484522792782*^9, 3.613487613756852*^9, 3.613562703047884*^9, 
   3.613563798541427*^9, 3.613574801814663*^9, 3.6135753671411905`*^9, 
   3.613576129789448*^9, 3.613646571717727*^9, 3.613733709335082*^9, 
   3.613747908559886*^9, 3.6137553854235163`*^9, 3.614514526602625*^9, 
   3.614515855295277*^9, 3.6145223247204175`*^9, 3.6145239105339875`*^9, 
   3.6145250308050036`*^9, 3.6145264330372176`*^9, 3.6145383658415203`*^9, 
   3.614538452627606*^9, 3.614538643416963*^9, 3.614594389644681*^9, 
   3.6145962176814456`*^9, 3.614603293036929*^9, 3.6146179320027122`*^9, 
   3.6146997252875957`*^9, 3.614778199597018*^9, 3.6148599170793104`*^9, 
   3.614860451569953*^9, 3.6148607908949876`*^9, 3.614866151926037*^9, 
   3.614948695157714*^9, 3.6149509670408792`*^9, 3.614952760689226*^9, 
   3.614965209859047*^9, 3.614965307992859*^9, 3.6150308030800314`*^9, 
   3.6150336611908183`*^9, {3.6150492163169413`*^9, 3.6150492411654263`*^9}, 
   3.615057079278178*^9, 3.615057439365183*^9, 3.615057719782222*^9, 
   3.615112373041849*^9, 3.6151126221434503`*^9, 3.615113442480162*^9, 
   3.6151248984460115`*^9, 3.615126735379531*^9, 3.615129385067633*^9, 
   3.6151312626433816`*^9, 3.615131540384153*^9, 3.615133771720264*^9, 
   3.615225675866415*^9, 3.6152281743822412`*^9, 3.6152371810718346`*^9, 
   3.6152885561746144`*^9, 3.6152886457941933`*^9, 3.6152899424088416`*^9, 
   3.615300837029218*^9, 3.6153009830578194`*^9, 3.6153014609246016`*^9, 
   3.6153035773452225`*^9, 3.615313500702049*^9, 3.615546481285754*^9, 
   3.61554698760396*^9, 3.61554739565215*^9, 3.6155498958311434`*^9, 
   3.615562260370511*^9, 3.6155831278400497`*^9, 3.6156538000499907`*^9, 
   3.6157218621606607`*^9, 3.615732890814439*^9, 3.615734488538421*^9, 
   3.615805192484095*^9, 3.61581761116883*^9, 3.615825675182151*^9, 
   3.6158260071503444`*^9, 3.6158873528815765`*^9, 3.6180627377867837`*^9, 
   3.6180666122422*^9, 3.618066777567731*^9, 3.6180805417260323`*^9, 
   3.6180806280546646`*^9, 3.618085277273549*^9, 3.618148579599499*^9, 
   3.618255180462733*^9, 3.6183247892048583`*^9, 3.6183280548833933`*^9, 
   3.6183293253424315`*^9, 3.6183301533162203`*^9, 3.618331817480625*^9, 
   3.618666376733014*^9, 3.6186673227446156`*^9, 3.6186678473600717`*^9, 
   3.618668137833116*^9, 3.618673276167903*^9, 3.6186827769118967`*^9, 
   3.618684340678724*^9, 3.6186851869488854`*^9, 3.618857324435361*^9, 
   3.6196992486082983`*^9, 3.619699613403155*^9, 3.6197025089683113`*^9, 
   3.6197040133077345`*^9, 3.619706769837365*^9, 3.619707235195896*^9, 
   3.6198021616144357`*^9, 3.6198945406530886`*^9, {3.6198950797259903`*^9, 
   3.619895096096627*^9}, {3.6198956833473463`*^9, 3.61989571248726*^9}, 
   3.6199631099099264`*^9, 3.6199724019010515`*^9, 3.6199725667875385`*^9, 
   3.6199769898898134`*^9, 3.619979604700653*^9, 3.6200559417407885`*^9, 
   3.620056089708316*^9, 3.620056203882326*^9, 3.620056263483878*^9, 
   3.620125257457226*^9, 3.621018785338542*^9, 3.645016202752147*^9, 
   3.645016777331334*^9, 3.6450187547632647`*^9, 3.64502209735485*^9, 
   3.645032345449112*^9, 3.6450324797786264`*^9, 3.6450337071894317`*^9, 
   3.6450396618815365`*^9, 3.6450432998554373`*^9, 3.64518243673363*^9, 
   3.6451987238774033`*^9, 3.6452052022842555`*^9, 3.645267455433679*^9, 
   3.645271337235793*^9, 3.6452730579801674`*^9, 3.6452736978197675`*^9, 
   3.6452749059407315`*^9, 3.645275132389192*^9, 3.645277824966324*^9, 
   3.645279213077179*^9, 3.645285845410019*^9, 3.645287452509768*^9, 
   3.645288264832663*^9, 3.6452893772712555`*^9, 3.645291215211713*^9, 
   3.6452912842426863`*^9, 3.645291337156452*^9, 3.6452920927399626`*^9, 
   3.6452928374082055`*^9, 3.645293433656314*^9, 3.6452945044776106`*^9, 
   3.645295647172735*^9, 3.6452957368964386`*^9, 3.645297391239665*^9, 
   3.645297447251628*^9, 3.6452981435900946`*^9, 3.645300057257868*^9, 
   3.6453504379535766`*^9, 3.645355715226348*^9, 3.645385825313259*^9, 
   3.645388229717525*^9, 3.645442949067233*^9, 3.6454430455538807`*^9, 
   3.6454454290685873`*^9, 3.64552424339974*^9, 3.6455246650389333`*^9, 
   3.6458179010419245`*^9, 3.645818843817007*^9, {3.6458191459489*^9, 
   3.6458191722586346`*^9}, 3.6996925581990647`*^9, 3.699721692005211*^9, 
   3.6997228364386425`*^9, 3.6997241564246283`*^9, 3.699724375254509*^9, 
   3.6997247695699368`*^9, 3.699724848090788*^9, 3.6997253718521585`*^9, 
   3.6997254805950317`*^9, 3.69972560249022*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "infy"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "infy"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6454420559219275`*^9, {3.6454421643577695`*^9, 3.6454421720135355`*^9}, {
   3.645442495867917*^9, 3.6454425406463947`*^9}, {3.6454430045077763`*^9, 
   3.645443035477873*^9}, {3.699725229541929*^9, 3.6997252296449394`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "\"\<zlm100 block memo.txt\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<wltildeStatic100 block memo.txt\>\""}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfeHLCl5/jdeOB3O/g+mQrxoaIFrv4mUwffnq6kwQ
PePkJzB9I9zgfQCQjvl+8AOI3vO/OyYISEc8OwWm85TiPkUA6fnyqWA62c2D
KRJIH3EIA9N3l886dA5IOzhdBtMBH6OTzgPptx9iwLRFzMNaEJ0b/RhM34mY
VXcFSF+fMqURRL9qOfz0KpCWYj4BpqdfNCy4BqTPae8E01VPU2JuAelZR/tj
QfS3piWJINq5bgOYVnyQveo2kO7ZfwRMZ7xWSlHUfO3oxKUBppf0vbJaNeG1
ow63tjWIDhDa5AKiRdZtA9MAGRKcTA==
  "]],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NumericalDifferentialEquationAnalysis`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ParallelNeeds", "[", 
  "\"\<NumericalDifferentialEquationAnalysis`\>\"", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Common functions", "Subsection",
 CellChangeTimes->{{3.6117656500102625`*^9, 3.6117656739956613`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bVerbose", "=", "True"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nIntegrateTrapezoid", "[", "data_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "fx", ",", "deltax", ",", "addfx"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "fx"}], "}"}], "=", 
         RowBox[{"Transpose", "[", "data", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"deltax", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"x", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"addfx", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"Plus", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"fx", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"deltax", "*", "addfx"}], "]"}], "/", "2"}], "]"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "Schulz", " ", "distribution"}], ",", " ", 
    RowBox[{"equation", " ", "13"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSchulz", "[", 
     RowBox[{"Ra_", ",", "\[Sigma]_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Equal]", "0"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "R", "}"}], ",", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{"R", "-", "Ra"}], "]"}]}], "]"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "R", "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "/", "Ra"}], ")"}], 
          "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"R", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"\[Sigma]", "^", "2"}]}], "-", "1"}], ")"}]}], "/", 
          RowBox[{"Gamma", "[", 
           RowBox[{"1", "/", 
            RowBox[{"\[Sigma]", "^", "2"}]}], "]"}]}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "R"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "/", "Ra"}]}], 
          "]"}]}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getQVals", "[", 
     RowBox[{"qMin_", ",", "qMax_", ",", "numPts_", ",", "bLog_"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"bLog", ",", 
      RowBox[{"10", "^", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", "qMin"}], "]"}], "+", 
          RowBox[{"i", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", "qMax"}], "]"}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", "qMin"}], "]"}]}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1", ",", 
           RowBox[{"1", "/", "numPts"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"qMin", "+", 
         RowBox[{"i", "*", 
          RowBox[{"(", 
           RowBox[{"qMax", "-", "qMin"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "1", ",", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"numPts", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"returns", " ", "the", " ", "domain", " ", "half"}], "-", 
    RowBox[{
    "angle", " ", "for", " ", "N", " ", "monodisperse", " ", "domains", " ", 
     "with", " ", "total", " ", "area", " ", "fraction", " ", "ad"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"get\[Alpha]N", "[", 
     RowBox[{"ad_", ",", "N_"}], "]"}], ":=", 
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "-", 
      RowBox[{"2", "*", 
       RowBox[{"ad", "/", "N"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"printListLen", "[", 
     RowBox[{"textList_", ",", "len_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{"bVerbose", ",", 
      RowBox[{"Apply", "[", 
       RowBox[{"Print", ",", 
        RowBox[{"MapThread", "[", 
         RowBox[{"getUniformLengthString", ",", 
          RowBox[{"{", 
           RowBox[{"textList", ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"len", ",", 
              RowBox[{"Length", "[", "textList", "]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"myNum", "[", "number_", "]"}], ":=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"number", ",", 
      RowBox[{"ExponentFunction", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "10"}], "<", "#", "<", "10"}], ",", "Null", ",", 
           "#"}], "]"}], "&"}], ")"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getUniformLengthString", "[", 
     RowBox[{"text_", ",", "len_"}], "]"}], ":=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"PadRight", "[", 
        RowBox[{
         RowBox[{"Characters", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"myNum", "[", "text", "]"}], "]"}], "]"}], ",", "len", 
         ",", "\"\< \>\""}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "}"}], "\[Rule]", "\"\< \>\""}]}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"querySymbols", "[", "expression_", "]"}], ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"globalQ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Context", "@", "#"}], "===", "\"\<Global`\>\""}], "&"}]}], 
       "}"}], ",", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"expression", ",", 
         RowBox[{"_Symbol", "?", "globalQ"}], ",", "Infinity"}], "]"}]}]}], 
     "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.611765691353397*^9, 3.611765702533515*^9}, {
   3.6117657770519657`*^9, 3.6117658625255127`*^9}, {3.6117659830515633`*^9, 
   3.6117659866999283`*^9}, {3.6117671150907564`*^9, 
   3.6117671155648036`*^9}, {3.6117741166299057`*^9, 3.611774128644107*^9}, 
   3.611838028432003*^9, {3.611838125455003*^9, 3.6118381400870028`*^9}, {
   3.611838283816124*^9, 3.611838299325675*^9}, {3.611845102204895*^9, 
   3.6118451269583697`*^9}, 3.613148632570283*^9, {3.6131498114961643`*^9, 
   3.613149817448759*^9}, {3.613410207412563*^9, 3.6134102094247637`*^9}, {
   3.6134833280183163`*^9, 3.6134833316006746`*^9}, 3.6134845090954123`*^9, {
   3.6135644446100273`*^9, 3.6135644652200885`*^9}, {3.613755348865861*^9, 
   3.613755362846259*^9}, {3.6145226354744897`*^9, 3.614522720071949*^9}, {
   3.614523139161854*^9, 3.614523171157053*^9}, {3.6145233635113835`*^9, 
   3.6145234212453833`*^9}, {3.6145234693403835`*^9, 
   3.6145234717453833`*^9}, {3.614523552429181*^9, 3.614523552668205*^9}, {
   3.6146205456770535`*^9, 3.614620545929079*^9}, {3.614620970903572*^9, 
   3.6146209709605775`*^9}, {3.614621094718952*^9, 3.6146211007465553`*^9}, {
   3.614621133630843*^9, 3.614621142671747*^9}, {3.6150336285075502`*^9, 
   3.6150336313788376`*^9}, {3.6150339183485317`*^9, 3.615033932796976*^9}, {
   3.6150340075364494`*^9, 3.615034043394035*^9}, {3.615290122193818*^9, 
   3.6152901282744265`*^9}, {3.6152901625188503`*^9, 3.615290367656362*^9}, {
   3.6152906024448385`*^9, 3.615290659895583*^9}, {3.6152907089924927`*^9, 
   3.615290710608654*^9}, 3.615301768681374*^9, {3.6299950211837025`*^9, 
   3.629995021448911*^9}, {3.6435689376037626`*^9, 3.643568937697365*^9}, {
   3.6435689985111313`*^9, 3.6435690153121634`*^9}, {3.643628166354265*^9, 
   3.643628396605731*^9}, {3.6452060415510855`*^9, 3.6452060418786945`*^9}, {
   3.645295602086178*^9, 3.6452956213314724`*^9}, {3.699722749443944*^9, 
   3.699722776389638*^9}, {3.6997228082658253`*^9, 3.699722818422841*^9}, {
   3.6997242415261374`*^9, 3.6997242417821627`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation and fitting functions: full Schulz integration", "Subsection",
 CellChangeTimes->{{3.6117656500102625`*^9, 3.6117656684451065`*^9}, {
  3.611765878014061*^9, 3.611765898453105*^9}, {3.611838212722003*^9, 
  3.6118382176570024`*^9}, {3.613301366208335*^9, 3.6133013737680907`*^9}, {
  3.6133890482323337`*^9, 3.613389053712429*^9}, {3.615112472869429*^9, 
  3.6151124780431137`*^9}, {3.645013384218232*^9, 3.6450133866237097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"creates", " ", "qvals"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getIntensityStaticDomainsMultiQ", "[", 
      RowBox[{
      "Rm_", ",", "Rmin_", ",", "Rmax_", ",", "Rstep_", ",", "\[Sigma]_", ",",
        "tacLd_", ",", "tacLo_", ",", "\[Rho]acLd_", ",", "\[Rho]acLo_", ",", 
       "\[Rho]m_", ",", "ad_", ",", "Nd_", ",", "bLdDomain_", ",", "maxL_", 
       ",", "bSFF_", ",", "qMin_", ",", "qMax_", ",", "numQPts_", ",", 
       "bLogQ_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bShortCircuit", ",", "qvals", ",", "ansVsQ"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "this", " ", "version", " ", "only", " ", "works", " ", "for", " ", 
           "7", " ", "specific", " ", "domain", " ", "center", " ", 
           RowBox[{"configurations", "!"}], " ", "If", " ", "any", " ", 
           "other", " ", "number", " ", "of", " ", "domains", " ", "is", " ", 
           "requested"}], ",", " ", 
          RowBox[{
          "short", " ", "circuit", " ", "with", " ", "an", " ", "error", " ", 
           "message"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bShortCircuit", "=", 
          RowBox[{"!", 
           RowBox[{"Apply", "[", 
            RowBox[{"Or", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SameQ", "[", 
                 RowBox[{"Nd", ",", "#"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "12", ",", 
                 "20"}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"bShortCircuit", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Only 1, 2, 4, 6, 8, 12, or 20 domains are allowed available \
with this version.\\nPlease change Nd and try again!\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "Null", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"qvals", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"SetPrecision", "[", 
              RowBox[{"#", ",", "100"}], "]"}], "&"}], ",", 
            RowBox[{"getQVals", "[", 
             RowBox[{"qMin", ",", "qMax", ",", "numQPts", ",", "bLogQ"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ansVsQ", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"qvals", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"getIntensityStaticDomainsSingleQ", "[", 
               RowBox[{
               "Rm", ",", "Rmin", ",", "Rmax", ",", "Rstep", ",", "\[Sigma]", 
                ",", "tacLd", ",", "tacLo", ",", "\[Rho]acLd", ",", 
                "\[Rho]acLo", ",", "\[Rho]m", ",", "ad", ",", "Nd", ",", 
                "bLdDomain", ",", "maxL", ",", "bSFF", ",", 
                RowBox[{"qvals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "qvals", "]"}]}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<CoarsestGrained\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "\"\<\\t...complete.\>\"", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "ansVsQ", "]"}]}], "\[IndentingNewLine]", 
        ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"takes", " ", "a", " ", "list", " ", "of", " ", "qvals"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getIntensityStaticDomainsMultiQ2", "[", 
      RowBox[{
      "Rm_", ",", "Rmin_", ",", "Rmax_", ",", "Rstep_", ",", "\[Sigma]_", ",",
        "tacLd_", ",", "tacLo_", ",", "\[Rho]acLd_", ",", "\[Rho]acLo_", ",", 
       "\[Rho]m_", ",", "ad_", ",", "Nd_", ",", "bLdDomain_", ",", "maxL_", 
       ",", "bSFF_", ",", "qvals_"}], "]"}], ":=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"getIntensityStaticDomainsSingleQ", "[", 
           RowBox[{
           "Rm", ",", "Rmin", ",", "Rmax", ",", "Rstep", ",", "\[Sigma]", ",",
             "tacLd", ",", "tacLo", ",", "\[Rho]acLd", ",", "\[Rho]acLo", ",",
             "\[Rho]m", ",", "ad", ",", "Nd", ",", "bLdDomain", ",", "maxL", 
            ",", "bSFF", ",", "#"}], "]"}]}], "}"}], "&"}], ",", "qvals"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getIntensityStaticDomainsSingleQ", "[", 
      RowBox[{
       RowBox[{"Rm_", "?", "NumberQ"}], ",", 
       RowBox[{"Rmin_", "?", "NumberQ"}], ",", 
       RowBox[{"Rmax_", "?", "NumberQ"}], ",", 
       RowBox[{"Rstep_", "?", "NumberQ"}], ",", 
       RowBox[{"\[Sigma]_", "?", "NumberQ"}], ",", 
       RowBox[{"tacLd_", "?", "NumberQ"}], ",", 
       RowBox[{"tacLo_", "?", "NumberQ"}], ",", 
       RowBox[{"\[Rho]acLd_", "?", "NumberQ"}], ",", 
       RowBox[{"\[Rho]acLo_", "?", "NumberQ"}], ",", 
       RowBox[{"\[Rho]m_", "?", "NumberQ"}], ",", 
       RowBox[{"ad_", "?", "NumberQ"}], ",", 
       RowBox[{"Nd_", "?", "NumberQ"}], ",", 
       RowBox[{"bLdDomain_", "?", "BooleanQ"}], ",", 
       RowBox[{"maxL_", "?", "NumberQ"}], ",", 
       RowBox[{"bSFF_", "?", "BooleanQ"}], ",", 
       RowBox[{"qCur_", "?", "NumberQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "schulzFnCur", ",", "RList", ",", "weights", ",", "schulzVals", ",", 
         "ItotalT1", ",", "ItotalT2", ",", "RmCur", ",", "\[Sigma]Cur", ",", 
         "ldAreaFrac", ",", "Vshell", ",", "lipidVolFracSample", ",", "sfAbs",
          ",", "Itotal", ",", "ff"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Clear", "[", "R", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Sigma]", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ItotalT2", "=", 
             RowBox[{
              RowBox[{"getIntensityStaticDomainsMultiR", "[", 
               RowBox[{"qCur", ",", 
                RowBox[{"{", "Rm", "}"}], ",", "tacLd", ",", "tacLo", ",", 
                "\[Rho]acLd", ",", "\[Rho]acLo", ",", "\[Rho]m", ",", "ad", 
                ",", "Nd", ",", "bLdDomain", ",", "maxL"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Goto", "[", "scalefactor", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"bSFF", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"RmCur", ",", "\[Sigma]Cur"}], "}"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SetPrecision", "[", 
                 RowBox[{"#", ",", "100"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"Rm", ",", "\[Sigma]"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ItotalT2", "=", 
             RowBox[{"getIntensityStaticDomainsSFF", "[", 
              RowBox[{
              "qCur", ",", "RmCur", ",", "\[Sigma]Cur", ",", "tacLd", ",", 
               "tacLo", ",", "\[Rho]acLd", ",", "\[Rho]acLo", ",", "\[Rho]m", 
               ",", "ad", ",", "Nd", ",", "bLdDomain", ",", "maxL"}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Goto", "[", "scalefactor", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"schulzFnCur", "=", 
          RowBox[{"getSchulz", "[", 
           RowBox[{"Rm", ",", "\[Sigma]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "we", " ", "wind", " ", "up", " ", "here"}], 
           ",", " ", 
           RowBox[{
           "perform", " ", "full", " ", "numerical", " ", "integration", " ", 
            "over", " ", "Schulz", " ", "distribution"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"RList", "=", 
          RowBox[{"Range", "[", 
           RowBox[{"Rmin", ",", "Rmax", ",", "Rstep"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"schulzVals", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"schulzFnCur", ",", "RList"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ItotalT1", "=", 
          RowBox[{"getIntensityStaticDomainsMultiR", "[", 
           RowBox[{
           "qCur", ",", "RList", ",", "tacLd", ",", "tacLo", ",", 
            "\[Rho]acLd", ",", "\[Rho]acLo", ",", "\[Rho]m", ",", "ad", ",", 
            "Nd", ",", "bLdDomain", ",", "maxL"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ItotalT2", "=", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"RList", ",", 
              RowBox[{"schulzVals", "*", "ItotalT1"}]}], "}"}], "]"}], "//", 
           "nIntegrateTrapezoid"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Label", "[", "scalefactor", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "calculate", " ", "the", " ", "absolute", " ", "scale", " ", 
           "factor"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"ldAreaFrac", "=", 
          RowBox[{"If", "[", 
           RowBox[{"bLdDomain", ",", "ad", ",", 
            RowBox[{"(", 
             RowBox[{"1", "-", "ad"}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Vshell", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"10", "^", 
             RowBox[{"-", "24"}]}], ")"}], "*", 
           RowBox[{"4", "/", "3"}], "*", "\[Pi]", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ldAreaFrac", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Rm", "+", 
                   RowBox[{"tacLd", "/", "2"}]}], ")"}], "^", "3"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Rm", "-", 
                   RowBox[{"tacLd", "/", "2"}]}], ")"}], "^", "3"}]}], 
               ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "ldAreaFrac"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Rm", "+", 
                   RowBox[{"tacLo", "/", "2"}]}], ")"}], "^", "3"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Rm", "-", 
                   RowBox[{"tacLo", "/", "2"}]}], ")"}], "^", "3"}]}], 
               ")"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lipidVolFracSample", "=", "0.01"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sfAbs", "=", 
          RowBox[{"lipidVolFracSample", "/", "Vshell"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Itotal", "=", 
          RowBox[{"sfAbs", "*", "ItotalT2"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ff", "=", 
          RowBox[{"qCur", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Abs", "[", "Itotal", "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "Itotal", "]"}]}], " ", "\[IndentingNewLine]",
         ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "performs", " ", "a", " ", "discrete", " ", "numerical", " ", 
     "integration", " ", "over", " ", "the", " ", "Schulz", " ", 
     "distribution"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getIntensityStaticDomainsMultiR", "[", 
      RowBox[{
      "q_", ",", "RList_", ",", "tacLd_", ",", "tacLo_", ",", "\[Rho]acLd_", 
       ",", "\[Rho]acLo_", ",", "\[Rho]m_", ",", "ad_", ",", "Nd_", ",", 
       "bLdDomain_", ",", "maxL_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tacDom", ",", "tacSur", ",", "\[Rho]acDom", ",", "\[Rho]acSur", ",", 
         "R0hom", ",", "R1hom", ",", "R2hom", ",", "R3hom", ",", "\[Rho]1hom",
          ",", "\[Rho]2hom", ",", "\[Rho]3hom", ",", "D0het", ",", "D1het", 
         ",", "D2het", ",", "D3het", ",", "R0het", ",", "R1het", ",", "R2het",
          ",", "R3het", ",", "\[Rho]1het", ",", "\[Rho]2het", ",", 
         "\[Rho]3het", ",", "si0het", ",", "si1het", ",", "si2het", ",", 
         "si3het", ",", "\[Alpha]d", ",", "m0", ",", "w0", ",", "W0", ",", 
         "M0", ",", "WlTr", ",", "Wl", ",", "wtildel", ",", "wtildeFn", ",", 
         "Ihomo", ",", "numFuns", ",", "Ihetero", ",", "Itotal"}], "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"domain", " ", "and", " ", "surround", " ", "thicknesses"}],
           ",", " ", "SLDs"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tacDom", ",", "tacSur"}], "}"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{"bLdDomain", ",", 
            RowBox[{"{", 
             RowBox[{"tacLd", ",", "tacLo"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"tacLo", ",", "tacLd"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Rho]acDom", ",", "\[Rho]acSur"}], "}"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{"bLdDomain", ",", 
            RowBox[{"{", 
             RowBox[{"\[Rho]acLd", ",", "\[Rho]acLo"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Rho]acLo", ",", "\[Rho]acLd"}], "}"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"homogeneous", " ", 
           RowBox[{"core", "/", "shell"}], " ", "profile"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"R0hom", ",", "R1hom", ",", "R2hom", ",", "R3hom"}], "}"}],
           "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RList", "-", 
             RowBox[{"tacSur", "/", "2"}]}], ",", 
            RowBox[{"RList", "-", 
             RowBox[{"tacSur", "/", "2"}]}], ",", 
            RowBox[{"RList", "+", 
             RowBox[{"tacSur", "/", "2"}]}], ",", 
            RowBox[{"RList", "+", 
             RowBox[{"tacSur", "/", "2"}]}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Rho]1hom", ",", "\[Rho]2hom", ",", "\[Rho]3hom"}], 
           "}"}], "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"\[Rho]acSur", "-", "\[Rho]m"}], ",", "0"}], "}"}]}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"heterogeneous", " ", 
           RowBox[{"core", "/", "shell"}], " ", "profile"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"D0het", ",", "D1het", ",", "D2het", ",", "D3het"}], "}"}],
           "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "tacDom"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"-", "tacSur"}], "/", "2"}], ",", 
             RowBox[{"tacDom", "/", "2"}], ",", 
             RowBox[{"tacSur", "/", "2"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"R0het", ",", "R1het", ",", "R2het", ",", "R3het"}], "}"}],
           "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "+", 
                RowBox[{"{", 
                 RowBox[{"D0het", ",", "D1het", ",", "D2het", ",", "D3het"}], 
                 "}"}]}], ")"}], "&"}], ",", "RList"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Rho]1het", ",", "\[Rho]2het", ",", "\[Rho]3het"}], 
           "}"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"tacDom", ">", "tacSur"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]acDom", "-", "\[Rho]m"}], ",", 
              RowBox[{"\[Rho]acDom", "-", "\[Rho]acSur"}], ",", 
              RowBox[{"\[Rho]acDom", "-", "\[Rho]m"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]m", "-", "\[Rho]acSur"}], ",", 
              RowBox[{"\[Rho]acDom", "-", "\[Rho]acSur"}], ",", 
              RowBox[{"\[Rho]m", "-", "\[Rho]acSur"}]}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"si0het", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mySinIntegral", "[", 
              RowBox[{"q", "*", "#"}], "]"}], "&"}], ",", "R0het"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"si1het", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mySinIntegral", "[", 
              RowBox[{"q", "*", "#"}], "]"}], "&"}], ",", "R1het"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"si2het", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mySinIntegral", "[", 
              RowBox[{"q", "*", "#"}], "]"}], "&"}], ",", "R2het"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"si3het", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mySinIntegral", "[", 
              RowBox[{"q", "*", "#"}], "]"}], "&"}], ",", "R3het"}], "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]d", "=", 
          RowBox[{"get\[Alpha]N", "[", 
           RowBox[{"ad", ",", "Nd"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"homogeneous", " ", "contribution"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"M0", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{"fZ0Fast", "[", 
            RowBox[{
            "R0hom", ",", "R1hom", ",", "R2hom", ",", "R3hom", ",", 
             "\[Rho]1hom", ",", "\[Rho]2hom", ",", "\[Rho]3hom", ",", "q"}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"W0", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{"fZ0Fast", "[", 
            RowBox[{
            "R0het", ",", "R1het", ",", "R2het", ",", "R3het", ",", 
             "\[Rho]1het", ",", "\[Rho]2het", ",", "\[Rho]3het", ",", "q"}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"m0", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Pi]", "]"}]}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"w0", "=", 
          RowBox[{"Nd", "*", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Alpha]d", "]"}]}], ")"}]}], ")"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Ihomo", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", "^", 
             RowBox[{"-", "2"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"M0", "*", "m0"}], "+", 
               RowBox[{"W0", "*", "w0"}]}], "]"}], "^", "2"}], ")"}]}]}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"heterogeneous", " ", "contribution"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"numFuns", "=", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"maxL", "/", "10"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"WlTr", "=", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Join", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"Thread", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{
                   "R0het", ",", "R1het", ",", "R2het", ",", "R3het", ",", 
                    "\[Rho]1het", ",", "\[Rho]2het", ",", "\[Rho]3het", ",", 
                    "si0het", ",", "si1het", ",", "si2het", ",", "si3het", 
                    ",", "q"}], "]"}], "]"}], "]"}], "&"}], ",", 
               RowBox[{"fnList", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "numFuns"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "maxL"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Wl", "=", 
          RowBox[{"Transpose", "[", "WlTr", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "wtildeFns", " ", "is", " ", "hardcoded", " ", "in", " ", 
           "imported", " ", "text", " ", "files"}], "  ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"wtildeFn", "=", 
          RowBox[{"Piecewise", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"wtildeFns", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Nd", "\[Equal]", "1"}], ",", 
                RowBox[{"Nd", "\[Equal]", "2"}], ",", 
                RowBox[{"Nd", "\[Equal]", "4"}], ",", 
                RowBox[{"Nd", "\[Equal]", "6"}], ",", 
                RowBox[{"Nd", "\[Equal]", "8"}], ",", 
                RowBox[{"Nd", "\[Equal]", "12"}], ",", 
                RowBox[{"Nd", "\[Equal]", "20"}]}], "}"}]}], "}"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"wtildel", "=", 
          RowBox[{
           RowBox[{"wtildeFn", "[", "ad", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "maxL"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Ihetero", "=", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"-", "2"}]}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Abs", "[", "Wl", "]"}], "^", "2"}], ")"}], ".", 
            "wtildel"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"total", " ", "intensity"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Itotal", "=", 
          RowBox[{
           RowBox[{"10", "^", 
            RowBox[{"-", "26"}]}], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "*", "\[Pi]"}], ")"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"4", "*", "\[Pi]"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{"Ihomo", "+", "Ihetero"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "Itotal", "]"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "uses", " ", "the", " ", "separated", " ", "form", " ", "factor", " ", 
     "approximation", " ", "for", " ", "multiple", " ", "domains"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getIntensityStaticDomainsSFF", "[", 
      RowBox[{
      "q_", ",", "Rm_", ",", "\[Sigma]_", ",", "tacLd_", ",", "tacLo_", ",", 
       "\[Rho]acLd_", ",", "\[Rho]acLo_", ",", "\[Rho]m_", ",", "ad_", ",", 
       "Nd_", ",", "bLdDomain_", ",", "maxL_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tacDom", ",", "tacSur", ",", "\[Rho]acDom", ",", "\[Rho]acSur", ",", 
         "FTS1", ",", "FTS2", ",", "\[Alpha]d", ",", "m0", ",", "w0", ",", 
         "W0", ",", "M0", ",", "WlTr", ",", "Wl", ",", "wtildel", ",", 
         "wtildeFn", ",", "Ihomo", ",", "Ihetero", ",", "Itotal", ",", "tt"}],
         "}"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"domain", " ", "and", " ", "surround", " ", "thicknesses"}],
           ",", " ", "SLDs"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tacDom", ",", "tacSur"}], "}"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{"bLdDomain", ",", 
            RowBox[{"{", 
             RowBox[{"tacLd", ",", "tacLo"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"tacLo", ",", "tacLd"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Rho]acDom", ",", "\[Rho]acSur"}], "}"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{"bLdDomain", ",", 
            RowBox[{"{", 
             RowBox[{"\[Rho]acLd", ",", "\[Rho]acLo"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Rho]acLo", ",", "\[Rho]acLd"}], "}"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"FTS1", "=", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Rho]acSur", "-", "\[Rho]m"}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}], "q"]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"FTS2", "=", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Rho]acDom", "-", "\[Rho]acSur"}], ")"}], " ", 
                   RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}], "q"], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tacDom", "-", "tacSur"}], "\[Equal]", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"tacDom", "-", 
                    RowBox[{"2", " ", "tacSur"}]}], "<", "0"}]}], ")"}], "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tacDom", "-", "tacSur"}], "\[GreaterEqual]", 
                    "0"}], "&&", 
                    RowBox[{
                    RowBox[{"tacDom", "-", 
                    RowBox[{"2", " ", "tacSur"}]}], "\[GreaterEqual]", "0"}], 
                    "&&", 
                    RowBox[{"tacSur", "\[LessEqual]", "0"}]}], ")"}], "||", 
                  RowBox[{"tacDom", "\[LessEqual]", "0"}]}]},
                {
                 RowBox[{
                  FractionBox["1", "q"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]acDom", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacDom"}], "2"], "]"}]}], "-", 
                    RowBox[{"\[Rho]m", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacDom"}], "2"], "]"}]}], "-", 
                    RowBox[{"\[Rho]acSur", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}], "+", 
                    RowBox[{"\[Rho]m", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}]}], ")"}]}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tacDom", "-", 
                    RowBox[{"2", " ", "tacSur"}]}], "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"tacDom", "-", "tacSur"}], ">", "0"}], "&&", 
                    RowBox[{"tacDom", ">", "0"}]}], ")"}], "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tacDom", "-", 
                    RowBox[{"2", " ", "tacSur"}]}], "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"tacDom", "-", "tacSur"}], "<", "0"}], "&&", 
                    RowBox[{"tacDom", ">", "0"}]}], ")"}], "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tacDom", "-", "tacSur"}], "<", "0"}], "&&", 
                    RowBox[{"tacDom", ">", "0"}], "&&", 
                    RowBox[{"tacSur", "\[LessEqual]", "0"}]}], ")"}]}]},
                {
                 RowBox[{"-", 
                  RowBox[{
                   FractionBox["1", "q"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]acSur", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}], "-", 
                    RowBox[{"\[Rho]m", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox[
                    RowBox[{"q", " ", "tacSur"}], "2"], "]"}]}], "-", 
                    RowBox[{"\[Rho]acDom", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "tacSur"}], "]"}]}], "+", 
                    RowBox[{"\[Rho]m", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "tacSur"}], "]"}]}]}], ")"}]}]}]}], 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}},
               Selectable->True]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]d", "=", 
          RowBox[{"get\[Alpha]N", "[", 
           RowBox[{"ad", ",", "Nd"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"homogeneous", " ", "contribution"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"m0", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Pi]", "]"}]}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"w0", "=", 
          RowBox[{"Nd", "*", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Alpha]d", "]"}]}], ")"}]}], ")"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Ihomo", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"m0", "*", "FTS1"}], "+", 
              RowBox[{"w0", "*", "FTS2"}]}], "]"}], "^", "2"}], "*", 
           RowBox[{"LlHyper", "[", 
            RowBox[{"0", ",", "q", ",", "Rm", ",", "\[Sigma]"}], "]"}]}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"heterogeneous", " ", "contribution"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "wtildeFn", " ", "is", " ", "hardcoded", " ", "in", " ", "imported",
            " ", "text", " ", "files"}], "  ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"wtildeFn", "=", 
          RowBox[{"Piecewise", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"wtildeFns", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Nd", "\[Equal]", "1"}], ",", 
                RowBox[{"Nd", "\[Equal]", "2"}], ",", 
                RowBox[{"Nd", "\[Equal]", "4"}], ",", 
                RowBox[{"Nd", "\[Equal]", "6"}], ",", 
                RowBox[{"Nd", "\[Equal]", "8"}], ",", 
                RowBox[{"Nd", "\[Equal]", "12"}], ",", 
                RowBox[{"Nd", "\[Equal]", "20"}]}], "}"}]}], "}"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"wtildel", "=", 
          RowBox[{
           RowBox[{"wtildeFn", "[", "ad", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "maxL"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Ihetero", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "FTS2", "]"}], "^", "2"}], "*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"LlHyper", "[", 
                RowBox[{"#", ",", "q", ",", "Rm", ",", "\[Sigma]"}], "]"}], 
               "&"}], ",", 
              RowBox[{"Range", "[", "maxL", "]"}]}], "]"}], ".", 
            "wtildel"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"total", " ", 
            RowBox[{"intensity", ":", " ", 
             RowBox[{
             "notice", " ", "the", " ", "missing", " ", "factor", " ", "16", 
              RowBox[{"\[Pi]", "^", "2"}], " ", "compared", " ", "to", " ", 
              "the", " ", "full", " ", "version", " ", 
              RowBox[{"above", ".", " ", "here"}]}]}]}], ",", " ", 
           RowBox[{
           "that", " ", "factor", " ", "is", " ", "incorporated", " ", "into",
             " ", "the", " ", "Llfast", " ", 
            RowBox[{"terms", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Itotal", "=", 
          RowBox[{
           RowBox[{"10", "^", 
            RowBox[{"-", "26"}]}], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "*", "\[Pi]"}], ")"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"4", "*", "\[Pi]"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{"Ihomo", "+", "Ihetero"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "Itotal", "]"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"g1", " ", "is", " ", "incorporated"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LlHyper", "[", 
      RowBox[{"l_", ",", "q_", ",", "Rm_", ",", "\[Sigma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"LlHyper", "[", 
       RowBox[{"l", ",", "q", ",", "Rm", ",", "\[Sigma]"}], "]"}], "=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{"2", "*", "l"}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rm", "*", 
               RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"2", "*", "l"}]}], ")"}]}], "*", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{"4", "+", 
              RowBox[{"2", " ", "l"}], "+", 
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]}], "]"}]}], 
           RowBox[{
            SuperscriptBox["4", 
             RowBox[{"l", "+", "1"}]], 
            RowBox[{"Gamma", "[", 
             RowBox[{"1", "/", 
              RowBox[{"\[Sigma]", "^", "2"}]}], "]"}], 
            SuperscriptBox[
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}]], ")"}], "*", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "+", 
                RowBox[{"2", "*", "l"}], "+", 
                RowBox[{"\[Sigma]", "^", 
                 RowBox[{"-", "2"}]}]}], ")"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"2", "*", "l"}], "+", 
                RowBox[{"\[Sigma]", "^", 
                 RowBox[{"-", "2"}]}]}], ")"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"2", "*", "l"}]}], ")"}], "/", "2"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", "*", "l"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", "4"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", "*", "Rm", "*", 
               RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "^", "2"}]}]}], 
          "]"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"equivalent", " ", "to", " ", "above"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LlHyper2", "[", 
      RowBox[{"l_", ",", "q_", ",", "Rm_", ",", "\[Sigma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"LlHyper", "[", 
       RowBox[{"l", ",", "q", ",", "Rm", ",", "\[Sigma]"}], "]"}], "=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "g1", "}"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"g1", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", 
                 RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "/", "Rm"}], ")"}], 
             "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "/", 
            RowBox[{"Gamma", "[", 
             RowBox[{"1", "/", 
              RowBox[{"\[Sigma]", "^", "2"}]}], "]"}]}]}], ";", 
          RowBox[{"g1", "*", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Pi]", " ", 
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"2", "*", "l"}], ")"}]}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Rm", "*", 
                 RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 RowBox[{"2", "*", "l"}], "+", 
                 RowBox[{"1", "/", 
                  RowBox[{"\[Sigma]", "^", "2"}]}]}], ")"}]}], "*", " ", 
              RowBox[{"Gamma", "[", 
               RowBox[{"4", "+", 
                RowBox[{"2", " ", "l"}], "+", 
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]}], "]"}]}], 
             RowBox[{
              SuperscriptBox["4", 
               RowBox[{"l", "+", "1"}]], 
              SuperscriptBox[
               RowBox[{"Gamma", "[", 
                RowBox[{
                 FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}]], ")"}], 
           "*", 
           RowBox[{"HypergeometricPFQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "+", "l"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"4", "+", 
                  RowBox[{"2", "*", "l"}], "+", 
                  RowBox[{"\[Sigma]", "^", 
                   RowBox[{"-", "2"}]}]}], ")"}], "/", "2"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"2", "*", "l"}], "+", 
                  RowBox[{"\[Sigma]", "^", 
                   RowBox[{"-", "2"}]}]}], ")"}], "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", "*", "l"}]}], ")"}], "/", "2"}], ",", 
               RowBox[{"2", "+", 
                RowBox[{"2", "*", "l"}]}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"-", "4"}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", "*", "Rm", "*", 
                 RowBox[{"\[Sigma]", "^", "2"}]}], ")"}], "^", "2"}]}]}], 
            "]"}]}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6118387174414825`*^9, 3.6118387185965977`*^9}, {
   3.6118451483395076`*^9, 3.6118451671973934`*^9}, {3.6118467019868565`*^9, 
   3.6118467034900074`*^9}, {3.6131484046052876`*^9, 
   3.6131484602070484`*^9}, {3.6131488141324377`*^9, 
   3.6131488370317273`*^9}, {3.6131489210221252`*^9, 
   3.6131489367066936`*^9}, {3.6131489717001925`*^9, 
   3.6131490364176636`*^9}, {3.613301410370751*^9, 3.6133014119739113`*^9}, {
   3.613301448801594*^9, 3.613301839097619*^9}, {3.6133019571964283`*^9, 
   3.6133020166143694`*^9}, {3.6133023955872626`*^9, 3.6133025564233446`*^9}, 
   3.6133040716911926`*^9, {3.613385366415448*^9, 3.6133854941732225`*^9}, {
   3.613386472081004*^9, 3.613386480798876*^9}, {3.6133885505310698`*^9, 
   3.6133886614486732`*^9}, {3.613388732704164*^9, 3.613388733063308*^9}, {
   3.6133888217307606`*^9, 3.6133888363295975`*^9}, {3.6133888789934926`*^9, 
   3.613388926784049*^9}, {3.6133890393295536`*^9, 3.613389039606609*^9}, {
   3.6134107095047665`*^9, 3.613410710097826*^9}, {3.6134107674835644`*^9, 
   3.613410767931609*^9}, {3.6134110646035566`*^9, 3.6134110860025563`*^9}, 
   3.613411560643882*^9, {3.613477756405841*^9, 3.613477778110841*^9}, {
   3.6134779956288404`*^9, 3.613478036913841*^9}, 3.6134780752208405`*^9, {
   3.6134783185854187`*^9, 3.6134783264132013`*^9}, {3.6134833957640905`*^9, 
   3.6134834681743307`*^9}, {3.6134836750300145`*^9, 3.613483677168228*^9}, {
   3.6134844667211757`*^9, 3.613484468393343*^9}, {3.6134848640735836`*^9, 
   3.6134848850535836`*^9}, {3.6134854237508736`*^9, 
   3.6134854239898977`*^9}, {3.6134855906675634`*^9, 
   3.6134855910275993`*^9}, {3.6134875471651936`*^9, 
   3.6134875730967865`*^9}, {3.613487639806457*^9, 3.613487644377914*^9}, 
   3.6134878961782107`*^9, {3.6134880880762844`*^9, 3.6134880882032967`*^9}, {
   3.6134882838818626`*^9, 3.613488294165891*^9}, {3.6135630812206974`*^9, 
   3.6135630814327188`*^9}, {3.613563130861661*^9, 3.6135631314137163`*^9}, {
   3.6135632741919928`*^9, 3.6135632751750913`*^9}, {3.6135635279038897`*^9, 
   3.61356363714189*^9}, {3.61356366975289*^9, 3.6135636925998898`*^9}, {
   3.6135638786144333`*^9, 3.613563986137185*^9}, {3.613564499129479*^9, 
   3.613564629772542*^9}, {3.6135646707686415`*^9, 3.6135646949010544`*^9}, {
   3.6137455311261663`*^9, 3.613745535802634*^9}, {3.6137462708531313`*^9, 
   3.6137463655506*^9}, {3.6137476212481575`*^9, 3.613747621366169*^9}, {
   3.6137478318712177`*^9, 3.61374783209524*^9}, {3.6137479347095003`*^9, 
   3.613747934825512*^9}, {3.613747967096739*^9, 3.6137479672157507`*^9}, {
   3.6137481384878764`*^9, 3.6137481388009076`*^9}, {3.6137482290429306`*^9, 
   3.6137482291709433`*^9}, {3.6137487172877502`*^9, 3.613748717420764*^9}, {
   3.6137489907460938`*^9, 3.613748991000119*^9}, {3.6137495913121443`*^9, 
   3.613749591443157*^9}, {3.613749656412654*^9, 3.613749656769689*^9}, {
   3.61451779458183*^9, 3.6145178187438297`*^9}, {3.614522454606405*^9, 
   3.614522476788623*^9}, {3.6145235669796357`*^9, 3.6145235700559435`*^9}, {
   3.614598683373436*^9, 3.6145987151694355`*^9}, {3.614598845002161*^9, 
   3.6145988463492956`*^9}, {3.6146200953520255`*^9, 3.614620107738264*^9}, {
   3.614620148168307*^9, 3.614620148208311*^9}, 3.6148667540002384`*^9, {
   3.614868275948684*^9, 3.6148682760826845`*^9}, {3.615031142803*^9, 
   3.615031153134033*^9}, {3.615031188039523*^9, 3.6150311881735363`*^9}, {
   3.615031243983117*^9, 3.6150313336690845`*^9}, {3.6150314302287397`*^9, 
   3.6150314393166485`*^9}, {3.615031491610877*^9, 3.615031491715888*^9}, 
   3.615031560718787*^9, 3.615031615905306*^9, {3.6150316560803223`*^9, 
   3.615031672564971*^9}, {3.615031715633277*^9, 3.615031716483362*^9}, {
   3.615046419955324*^9, 3.6150465288652143`*^9}, {3.615046677177044*^9, 
   3.6150466784251685`*^9}, {3.615046721507476*^9, 3.6150467236686926`*^9}, {
   3.6150467562919545`*^9, 3.6150467811324377`*^9}, {3.615047100292351*^9, 
   3.6150471308144026`*^9}, {3.6150471612554464`*^9, 3.61504732250657*^9}, {
   3.6150474090052195`*^9, 3.615047409121231*^9}, {3.615047496733991*^9, 
   3.6150475242197394`*^9}, {3.61504758403272*^9, 3.6150475892092376`*^9}, {
   3.615047624801797*^9, 3.615047650608377*^9}, {3.6150476878971057`*^9, 
   3.6150476879651127`*^9}, {3.615047721206436*^9, 3.615047722456561*^9}, {
   3.615047788233138*^9, 3.6150478279131055`*^9}, {3.615048146572859*^9, 
   3.615048226148859*^9}, {3.615048260760859*^9, 3.615048279272859*^9}, {
   3.615048375826859*^9, 3.615048379417859*^9}, {3.6150502580291023`*^9, 
   3.6150502736306624`*^9}, {3.6150503050268016`*^9, 3.615050333570656*^9}, {
   3.6150503796542635`*^9, 3.6150504674020376`*^9}, {3.615050499047202*^9, 
   3.6150506132136173`*^9}, 3.615051916829966*^9, {3.6151124930726285`*^9, 
   3.6151124957755985`*^9}, {3.615113099419564*^9, 3.6151133208658442`*^9}, {
   3.615313371451125*^9, 3.615313494881467*^9}, 3.6153135852184997`*^9, {
   3.615313654910468*^9, 3.6153137026872454`*^9}, {3.6153137337433505`*^9, 
   3.615313733877364*^9}, {3.6153139316717567`*^9, 3.6153141082537565`*^9}, 
   3.615314153554756*^9, {3.615550062959854*^9, 3.615550062994858*^9}, {
   3.61555009621918*^9, 3.6155501009756556`*^9}, {3.615550192472804*^9, 
   3.615550243043861*^9}, {3.615562197734248*^9, 3.615562235267001*^9}, 
   3.615562288783352*^9, 3.615722012299085*^9, {3.615736288840217*^9, 
   3.615736307052038*^9}, {3.6158875984311285`*^9, 3.615887620733359*^9}, {
   3.618066725916566*^9, 3.6180667306590405`*^9}, {3.6182533508477*^9, 
   3.6182533624117002`*^9}, {3.618253409217626*^9, 3.6182534166573696`*^9}, 
   3.6182534720349073`*^9, {3.6182535279705*^9, 3.618253528745578*^9}, {
   3.618253797676468*^9, 3.6182538011738176`*^9}, {3.6182538596296625`*^9, 
   3.618253885237223*^9}, {3.618253918582557*^9, 3.6182539356402626`*^9}, {
   3.6182539728399825`*^9, 3.618253972973996*^9}, {3.6182540084655447`*^9, 
   3.6182540207677746`*^9}, {3.6182542710918045`*^9, 3.618254314930188*^9}, {
   3.619962528573798*^9, 3.619962530130954*^9}, {3.619962577714712*^9, 
   3.619962674632403*^9}, {3.6199637746883974`*^9, 3.6199637961705456`*^9}, {
   3.6199722628321457`*^9, 3.6199722628521476`*^9}, {3.6199723020630684`*^9, 
   3.619972357977659*^9}, {3.6199725088147416`*^9, 3.619972508931753*^9}, {
   3.619972678457704*^9, 3.6199726845063086`*^9}, {3.619976957932618*^9, 
   3.6199769766204867`*^9}, 3.645012053346411*^9, {3.6450128283884373`*^9, 
   3.64501282848204*^9}, {3.6450133753965483`*^9, 3.645013375693958*^9}, {
   3.6450135479829335`*^9, 3.6450135973507185`*^9}, {3.645013662727756*^9, 
   3.6450136901304607`*^9}, {3.645014714991452*^9, 3.6450148400542717`*^9}, {
   3.6450160950877805`*^9, 3.645016097162634*^9}, {3.6450161335385685`*^9, 
   3.645016137581072*^9}, {3.6450161714337425`*^9, 3.645016172978182*^9}, {
   3.6450162362264075`*^9, 3.6450162386308694`*^9}, {3.645016360242796*^9, 
   3.6450163749767838`*^9}, {3.645016408509445*^9, 3.6450164136675787`*^9}, {
   3.645016453321597*^9, 3.645016607797973*^9}, {3.6450167372345037`*^9, 
   3.6450167378157187`*^9}, {3.645016841247778*^9, 3.64501684134138*^9}, {
   3.6450168735414085`*^9, 3.645016895589175*^9}, {3.6450186596585493`*^9, 
   3.645018659908156*^9}, {3.645030175894961*^9, 3.645030219567093*^9}, 
   3.6450303166634293`*^9, {3.6450303501482983`*^9, 3.6450303663948283`*^9}, {
   3.6450303976080475`*^9, 3.6450304115617228`*^9}, {3.6450304429297533`*^9, 
   3.645030442976554*^9}, {3.6450305542629657`*^9, 3.6450305543097663`*^9}, {
   3.645030726860848*^9, 3.6450307738889875`*^9}, {3.6450308257336187`*^9, 
   3.6450308257814198`*^9}, {3.645030978614506*^9, 3.6450310713726983`*^9}, {
   3.6450312046025085`*^9, 3.645031212490667*^9}, {3.645184862720421*^9, 
   3.6451848627526217`*^9}, {3.6451849029150352`*^9, 3.645184903151043*^9}, {
   3.645186057166069*^9, 3.6451861148085003`*^9}, 3.645200056118347*^9, {
   3.6452731093055553`*^9, 3.645273122332806*^9}, {3.6452736353427644`*^9, 
   3.645273687052491*^9}, {3.6452738408878493`*^9, 3.6452738410126524`*^9}, {
   3.645273957012831*^9, 3.6452739617739534`*^9}, {3.645274255597696*^9, 
   3.645274255738099*^9}, {3.6452742892693596`*^9, 3.6452743546112366`*^9}, {
   3.6452744132935514`*^9, 3.6452744271859083`*^9}, {3.6452754558083315`*^9, 
   3.645275459006434*^9}, {3.645279989417153*^9, 3.6452800678926244`*^9}, {
   3.6452810789900293`*^9, 3.645281105136635*^9}, 3.6452881669025345`*^9, {
   3.645288288821479*^9, 3.6452883055813093`*^9}, {3.6452893870344334`*^9, 
   3.6452894072698126`*^9}, 3.6452899892877665`*^9, {3.6452925943161325`*^9, 
   3.645292660519032*^9}, 3.6452931668461523`*^9, {3.6452932076412754`*^9, 
   3.64529325813013*^9}, {3.645294613903276*^9, 3.6452946148549004`*^9}, {
   3.645297319745222*^9, 3.645297366123093*^9}, {3.645297464883871*^9, 
   3.6452974698656225`*^9}, {3.6452975919927883`*^9, 
   3.6452975943796806`*^9}, {3.6452979643168335`*^9, 3.645297986942559*^9}, 
   3.6452980178073483`*^9, {3.6452981348040695`*^9, 3.6452981381747556`*^9}, {
   3.6453852856809745`*^9, 3.6453853246655774`*^9}, {3.645385396046414*^9, 
   3.6453856891097546`*^9}, {3.645385721369184*^9, 3.6453857242426577`*^9}, 
   3.645386462715885*^9, {3.645386497694784*^9, 3.64538650297272*^9}, {
   3.6454429150308294`*^9, 3.6454429231336393`*^9}, {3.645445337887639*^9, 
   3.645445371156495*^9}, {3.6454454145070124`*^9, 3.645445417446888*^9}, {
   3.645445479343648*^9, 3.645445479858461*^9}, {3.6455237428647766`*^9, 
   3.6455238048071914`*^9}, {3.645524499689763*^9, 3.6455245372804117`*^9}, {
   3.6455245833763866`*^9, 3.64552463227087*^9}, {3.6997222389539003`*^9, 
   3.6997222780168056`*^9}, {3.699722337615765*^9, 3.699722389015905*^9}, {
   3.699722426885691*^9, 3.6997224270177045`*^9}, {3.699722938942892*^9, 
   3.699722959142912*^9}, {3.699723123664362*^9, 3.699723277467741*^9}, {
   3.699723423133306*^9, 3.6997234783018227`*^9}, {3.699724024254412*^9, 
   3.699724120513037*^9}, {3.699724301649149*^9, 3.699724351673151*^9}, {
   3.6997252494589205`*^9, 3.699725250844059*^9}, {3.699725302481222*^9, 
   3.6997253026142354`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["For Ursula", "Section",
 CellChangeTimes->{{3.5303008547758102`*^9, 3.5303008652220335`*^9}, {
  3.5303026568029966`*^9, 3.530302661386202*^9}, {3.530367766528288*^9, 
  3.5303677665992928`*^9}, {3.530368287841031*^9, 3.5303682919132304`*^9}, {
  3.5304534802269907`*^9, 3.530453480976488*^9}, {3.54479089241011*^9, 
  3.544790893377205*^9}, {3.611765923158575*^9, 3.6117659241666756`*^9}, {
  3.64501678106283*^9, 3.6450167823284626`*^9}, {3.645040445298115*^9, 
  3.6450404521214905`*^9}, {3.645386021896923*^9, 3.645386023176156*^9}, {
  3.6458213219722214`*^9, 3.6458213230194483`*^9}, {3.6458232584605045`*^9, 
  3.645823260864966*^9}, {3.6996934415953956`*^9, 3.699693444371673*^9}}],

Cell[CellGroupData[{

Cell["Import MONSA data", "Subsection",
 CellChangeTimes->{{3.6997233506560593`*^9, 3.6997233589218855`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{"FileNames", "[", "\"\<*6dom.txt\>\"", "]"}]}], ";", 
  RowBox[{"fnames", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.6996935274499807`*^9, 3.699693544375673*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"I_monsa_6dom.txt\"\>"},
     {"\<\"q_monsa_6dom.txt\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6996935445906944`*^9, 3.699721696086619*^9, 
  3.6997228424342422`*^9, 3.6997233683448277`*^9, 3.6997241602590113`*^9, 
  3.699724379115895*^9, 3.699724773817361*^9, 3.6997248520741863`*^9, 
  3.6997253757695503`*^9, 3.6997254840943813`*^9, 3.69972560659163*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iMonsa", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<I_monsa_6dom.txt\>\"", ",", "\"\<Table\>\""}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qMonsa", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<q_monsa_6dom.txt\>\"", ",", "\"\<Table\>\""}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iqMonsa", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"qMonsa", ",", "iMonsa"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699693545767812*^9, 3.6996935889871335`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"iqMonsa", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Scientific\>\"", ",", "\"\<BoldColors\>\"", ",", 
      "\"\<SansLabels\>\""}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q [\!\(\*SuperscriptBox[\(\[Angstrom]\), \(-1\)]\)]\>\"", ",", 
      "\"\<Intensity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<MONSA\>\"", "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6996935898362184`*^9, 3.699693673493583*^9}, {
  3.6996938030285354`*^9, 3.6996938032835608`*^9}, {3.699721767197729*^9, 
  3.6997217775397635`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0+tWKonhmje3c/f18Iito05pihJi2HFhQEmqm088lzrxToEshkuzPrW6niYx
f+YFPFo8KYojuVu0PjSSmOVVYes39YriR8+JpmtGZOanLD0nryZR/PdLKCsh
gMy8LCb9L7daFM/s8vw0U0FmPtvz1FuqSBQn13MWZ8yhMB1HV/Eu5oriroyy
Fds3UZjuamyi/50o2qd/07dxoTCXG8xIuD8XxWs1wzkVoRQm0TJpLBItilkW
ruL33lOYgUm376aGiuIp3427OjIpzDZfiUFnf1G0iobiNIFscuaJio6nKJ4+
zDa5JpC9nETGhE7/n3zDqHPjgIMoBjW2eZg/ojCvBZ/vbd0jiuc8LO6oeVGY
ClJPP3ZZieLdJ8pf/PZQmFrZwn6sDaL4RCRsp9EqCnOBPGvBfH1RXNW/Xrp+
hMyMzj/oul1TFJs3CorcFDLTqSOfeUdVFO+lZJ+ydSIzzw5aXmiUE8V9688O
f5pHZs7R/NpsLCKKjq+OZYnkkphnn4Udes4TwQAXzcl9u0jMU6MPS1UmRDB+
jUHMllI+EbLdmZzQK4IVqpldhq08Yv9VyWaDFhHkWf80dv/NJYS5K9b/qRXB
2mmxAYUcDlGxvJsdWCqClubat/bfZBP/qf9FUNlZtvPUBhbBUjsvJZYpgmKN
1VaH+mYIbuFCtdZkEexpKrp+0muaiHisI/41XgRv3aX3XGqZJNqTLFPTH4qg
pEOuVuTqCWJ8V+Tg+zARtPir3er+aIy4JfUyMfuGCJ5cbSVb8HOE+CcZnVnu
I4Jck78JB18OEo/5fbThcyI43R6yVym5lzjWcNdtnpMI1v27Yti2pYuQLxxt
tj0ogn/c7tFWBLQRna2/dJ7sEsEoX0OjX16NhPEZr80DliL4vU4p2XfnL+LL
A08RK0IE52kEtpxgVRGvXtXbpRmI4MPJ9XdWJpUQunJi8zW0RDC54UhF9Pp8
4k/UH6PERSI4zjC58peeTdi6ngnXVhLB9aG5s9cfIrErzFbkq5QImpylgi3p
G3G743LIcbqIAI+OahHm3wnuG3WOFFcYD3YI5whJ/SSkcvtMi8aFsfS2iWUd
r46YN1RkfqtPGMcGaR9bmC3E2Uha765WYbSjVL+RvNRGbKzaqKRZJ4wVuhk/
dKc7iRiDK3kilcK42EoBnT17iSTd0dyJb8I4HaX/U+jpABGYsJbbmyeMMUlc
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
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{}, {}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-8.771250251958975, -5.9478320999074725`}, 
     PlotRange -> {{-8.661083915971417, -1.6104384127676838`}, \
{-5.795514325949406, 3.6481876594506453`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-8.771250251958975, -5.9478320999074725`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Intensity\"", TraditionalForm], None}, {
        FormBox[
        "\"q [\\!\\(\\*SuperscriptBox[\\(\[Angstrom]\\), \\(-1\\)]\\)]\"", 
         TraditionalForm], None}}, FrameStyle -> Automatic, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 450, 
     LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.661083915971417, -1.6104384127676838`}, \
{-5.795514325949406, 3.6481876594506453`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"MONSA\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22932000000000002`, 0.32741333333333333`, 
                    0.5995733333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.34398, 0.49112, 0.89936]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34398, 0.49112, 0.89936]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.34398, 0.49112, 0.89936], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.699693593735608*^9, 3.6996936303522696`*^9}, {
   3.699693660986333*^9, 3.6996936741606503`*^9}, 3.6996938037096033`*^9, 
   3.699721698518862*^9, {3.6997217724742565`*^9, 3.699721778036813*^9}, 
   3.699722845656564*^9, 3.6997233701680098`*^9, 3.699724161058091*^9, 
   3.699724379875971*^9, 3.699724774395419*^9, 3.6997248526812468`*^9, 
   3.6997253763846116`*^9, 3.6997254846294355`*^9, 3.699725607221693*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compute analytical form factor", "Subsection",
 CellChangeTimes->{{3.6997233506560593`*^9, 3.699723377333727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Note", " ", "that", " ", "the", " ", "vesicle", " ", "radius", " ", 
    "needs", " ", "to", " ", "be", " ", "adjusted", " ", "by", " ", "half", 
    " ", "the", " ", "bilayer", " ", 
    RowBox[{"thickness", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"N", "[", 
   RowBox[{"251", "+", 
    RowBox[{"35", "/", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6997217036053705`*^9, 3.699721707141724*^9}, {
  3.6997233801740103`*^9, 3.699723392543247*^9}}],

Cell[BoxData["268.5`"], "Output",
 CellChangeTimes->{3.699721707282738*^9, 3.6997228521562138`*^9, 
  3.699724181478133*^9, 3.699724382146198*^9, 3.6997247751424932`*^9, 
  3.6997248528322616`*^9, 3.699725376551628*^9, 3.6997254846464367`*^9, 
  3.6997256072396946`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "vesicle", " ", "size", " ", "distribution", " ", "parameters", " ", "to", 
    " ", "100", " ", "digits", " ", "of", " ", "precision"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rm", ",", "\[Sigma]"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"268.5`100", ",", "0.0`100"}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQzXwzbDar5mvHWXZXwXTwwiWLQDTX/H1gWu7jrmUg
+o4K2woQfS1yxxoQncEntR5Mxzgb3QLSUqcegWm3d6scQLRL7lowrcJ3yhtE
PykP8gHRv0VWfJw14bVjMnvqJxDtKfOMbzaQnnQlRRBE3/OTkwTR/NU2UiA6
c+N3BRAdZO+vBKJfX9imDaIbrIT1QLTGnAt7VwBpj54nYPqeqsshEB2X7Aam
Y+dNvwWipz4//ABEt06XeQqiFczFX4FoAbkbTSuBtN+c7lYQLdi2fC6IZuyz
nQei7e8kCKwC0k0LT4mCaI3cPksQLZM5AUzH/ZV3B9E7fm4MBtEA5SmqUw==

  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "numerically", " ", "integrating", " ", "over", " ", "the", 
     " ", "Schulz", " ", "distribution"}], ",", " ", 
    RowBox[{"provide", " ", "min", " ", "and", " ", "max", " ", "radii"}], 
    ",", " ", 
    RowBox[{"and", " ", "radius", " ", "step", " ", "size"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rmin", ",", "Rmax", ",", "Rstep"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"50", ",", "900", ",", "5"}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699724934266404*^9, 3.699724994670444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"domain", " ", "area", " ", "fraction"}], ",", " ", 
    RowBox[{"number", " ", "of", " ", "domains"}], ",", " ", 
    RowBox[{
    "and", " ", "flag", " ", "to", " ", "specify", " ", "if", " ", "Ld", " ", 
     "phase", " ", "is", " ", "the", " ", "domain", " ", 
     RowBox[{"(", "True", ")"}], " ", "or", " ", "surround", " ", 
     RowBox[{"(", "False", ")"}], " ", "phase"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ad", ",", "Nd", ",", "bLdDomain"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.272`100", ",", "6", ",", "False"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"domain", " ", "half"}], "-", 
     RowBox[{
     "angle", " ", "calculated", " ", "from", " ", "above", " ", 
      "parameters"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"get\[Alpha]N", "[", 
      RowBox[{"ad", ",", "Nd"}], "]"}], ",", "10"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6997250119561725`*^9, 3.6997250475977364`*^9}, {
  3.6997251379057665`*^9, 3.6997251675627317`*^9}, {3.6997254051024833`*^9, 
  3.6997254515441265`*^9}}],

Cell[BoxData["0.42911738180516869498163435641938938303`10."], "Output",
 CellChangeTimes->{{3.6997251548464603`*^9, 3.699725168387814*^9}, {
   3.699725378537827*^9, 3.6997254519291654`*^9}, 3.6997254846934414`*^9, 
   3.6997256072857*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "thickness", " ", "and", " ", "SLD", " ", "of", " ", "Ld", " ", "and", 
     " ", "Lo", " ", "phases"}], ",", " ", 
    RowBox[{"and", " ", "solvent", " ", "SLD"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tacLd", ",", "tacLo"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"35", ",", "35"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]acLd", ",", "\[Rho]acLo", ",", "\[Rho]m"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", 
       RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6997250085808353`*^9, 3.6997250089958763`*^9}, {
  3.6997250567896557`*^9, 3.6997250757985563`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"desired", " ", "q", " ", "range"}], ",", " ", 
    RowBox[{"number", " ", "of", " ", "q", " ", "points"}], ",", " ", 
    RowBox[{
    "and", " ", "whether", " ", "or", " ", "not", " ", "log", " ", 
     "spacing"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qMin", ",", "qMax", ",", "numQPts", ",", "bLogQ"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.0002", ",", "0.2", ",", "500", ",", "True"}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6997250783428106`*^9, 3.6997251156085367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "maximum", " ", "expansion", " ", "order", " ", "for", " ", "the", " ", 
    "calculation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"maxL", "=", "32"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699725118488825*^9, 3.6997251260965853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculate", " ", "the", " ", "full", " ", "form", " ", "factor"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bSFF", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", "ivsqFull"}], "}"}], "=", 
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"getIntensityStaticDomainsMultiQ", "[", 
       RowBox[{
       "Rm", ",", "Rmin", ",", "Rmax", ",", "Rstep", ",", "\[Sigma]", ",", 
        "tacLd", ",", "tacLo", ",", "\[Rho]acLd", ",", "\[Rho]acLo", ",", 
        "\[Rho]m", ",", "ad", ",", "Nd", ",", "bLdDomain", ",", "maxL", ",", 
        "bSFF", ",", "qMin", ",", "qMax", ",", "numQPts", ",", "bLogQ"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"\"\<Evaluation time: \>\"", ",", 
      RowBox[{"ToString", "[", "time1", "]"}], ",", "\"\< s\>\""}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.645016918592968*^9, 3.64501694164876*^9}, {
  3.645016975959447*^9, 3.645016977191879*^9}, {3.6450221391457224`*^9, 
  3.645022139488931*^9}, {3.645031171891438*^9, 3.6450311729990597`*^9}, {
  3.64527547011699*^9, 3.645275473798708*^9}, {3.645275516830888*^9, 
  3.645275523543103*^9}, {3.6452779942118745`*^9, 3.645277994289877*^9}, {
  3.6453859550516047`*^9, 3.6453859653764706`*^9}, {3.6453860505652604`*^9, 
  3.645386074304871*^9}, {3.6997217954285517`*^9, 3.699721796370646*^9}, {
  3.6997228671847167`*^9, 3.6997228979137897`*^9}, {3.69972351338133*^9, 
  3.699723518941886*^9}, {3.699724166167602*^9, 3.6997241726162467`*^9}, {
  3.69972481940792*^9, 3.6997248213631153`*^9}, {3.699725177140689*^9, 
  3.6997251815801334`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\t...complete.\"\>"], "Print",
 CellChangeTimes->{
  3.699722881597158*^9, {3.69972328835483*^9, 3.6997233126652603`*^9}, 
   3.6997241950434895`*^9, {3.6997244018251657`*^9, 3.69972444327631*^9}, 
   3.699724603709352*^9, 3.6997247505790377`*^9, 3.699724789624942*^9, 
   3.6997248221171904`*^9, 3.699724874375416*^9, {3.699725397150688*^9, 
   3.699725453256298*^9}, 3.6997254980337753`*^9, 3.699725620710042*^9}],

Cell[BoxData["\<\"Evaluation time: 13.3762 s\"\>"], "Print",
 CellChangeTimes->{
  3.699722881597158*^9, {3.69972328835483*^9, 3.6997233126652603`*^9}, 
   3.6997241950434895`*^9, {3.6997244018251657`*^9, 3.69972444327631*^9}, 
   3.699724603709352*^9, 3.6997247505790377`*^9, 3.699724789624942*^9, 
   3.6997248221171904`*^9, 3.699724874375416*^9, {3.699725397150688*^9, 
   3.699725453256298*^9}, 3.6997254980337753`*^9, 3.6997256207130423`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Use", " ", "the", " ", "SFF", " ", "approximation"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bSFF", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", "ivsqSFF"}], "}"}], "=", 
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"getIntensityStaticDomainsMultiQ", "[", 
       RowBox[{
       "Rm", ",", "Rmin", ",", "Rmax", ",", "Rstep", ",", "\[Sigma]", ",", 
        "tacLd", ",", "tacLo", ",", "\[Rho]acLd", ",", "\[Rho]acLo", ",", 
        "\[Rho]m", ",", "ad", ",", "Nd", ",", "bLdDomain", ",", "maxL", ",", 
        "bSFF", ",", "qMin", ",", "qMax", ",", "numQPts", ",", "bLogQ"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"\"\<Evaluation time: \>\"", ",", 
      RowBox[{"ToString", "[", "time2", "]"}], ",", "\"\< s\>\""}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyE0og3EAx/Elk+RAscRKkpkSRZID9RxMK1l7luKgeMZF2MjBQWmSHBQH
bctotdCemawZDjY2i42DzS6KzOvKmoO8bEjL//c/fPvUt4zTsAMZAoFATILG
n8igUppg1o5dw/B8Jz0K78olY/CY70+piKp1DZWfneztIrZ/m6ncoZ8PETMX
mmzQol/ehsV9ow64FZDFwkS7TE492uhbEVYlmNxc+ypcFbFWqPPJNyGX3nfC
V3eNG2YX6r1wJvAThLb60BW0Oi+pI82mW/r/5qNQ5FE/ws6Ohhg0iNMvMFgi
iENPZVHjNVH9oWqC922uVljnuaCGnbsrMJr8pD6/JR1Qrv2msgUPe7A054k6
ZGQOoOV0zgdvFF/VpsUE03OdqoWV9ny/lehlCqndWcIzyOlLqf0VJwqemOeO
KOHMhPQdTvvjH1C3ZG6xESUOAwPH/b8aKGantPAfMgbpAA==
  "]],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\t...complete.\"\>"], "Print",
 CellChangeTimes->{
  3.6997228842884274`*^9, 3.6997233145254464`*^9, 3.69972419684967*^9, {
   3.699724406663649*^9, 3.699724444226405*^9}, {3.6997247403610153`*^9, 
   3.6997247514281225`*^9}, {3.699724814738453*^9, 3.6997248239423733`*^9}, 
   3.699724876475626*^9, {3.6997253981357865`*^9, 3.6997254535843306`*^9}, 
   3.6997254984748197`*^9, 3.699725621161087*^9}],

Cell[BoxData["\<\"Evaluation time: 0.299234 s\"\>"], "Print",
 CellChangeTimes->{
  3.6997228842884274`*^9, 3.6997233145254464`*^9, 3.69972419684967*^9, {
   3.699724406663649*^9, 3.699724444226405*^9}, {3.6997247403610153`*^9, 
   3.6997247514281225`*^9}, {3.699724814738453*^9, 3.6997248239423733`*^9}, 
   3.699724876475626*^9, {3.6997253981357865`*^9, 3.6997254535843306`*^9}, 
   3.6997254984748197`*^9, 3.699725621163087*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ivsqFull", ",", "ivsqSFF"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Scientific\>\"", ",", "\"\<BoldColors\>\"", ",", 
      "\"\<SansLabels\>\""}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q [\!\(\*SuperscriptBox[\(\[Angstrom]\), \(-1\)]\)]\>\"", ",", 
      "\"\<Intensity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Full\>\"", ",", "\"\<SFF\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6996935898362184`*^9, 3.699693673493583*^9}, {
  3.6996938030285354`*^9, 3.6996938032835608`*^9}, {3.699721767197729*^9, 
  3.6997218177557845`*^9}, {3.699724398410824*^9, 3.699724415108494*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.97, 0.606, 0.081], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{}, {}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-8.77128705421734, -7.455318726218843},
      PlotRange -> {{-8.661104759728365, -1.6094379124341003`}, \
{-7.258768648889883, 4.927336145505607}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-8.77128705421734, -7.455318726218843}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Intensity\"", TraditionalForm], None}, {
        FormBox[
        "\"q [\\!\\(\\*SuperscriptBox[\\(\[Angstrom]\\), \\(-1\\)]\\)]\"", 
         TraditionalForm], None}}, FrameStyle -> Automatic, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 450, 
     LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.661104759728365, -1.6094379124341003`}, \
{-7.258768648889883, 4.927336145505607}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"Full\"", "\"SFF\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22932000000000002`, 0.32741333333333333`, 
                    0.5995733333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.34398, 0.49112, 0.89936]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34398, 0.49112, 0.89936]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.34398, 0.49112, 0.89936], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97, 0.606, 0.081], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6466666666666667, 0.404, 0.054000000000000006`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97, 0.606, 0.081]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97, 0.606, 0.081]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97, 0.606, 0.081], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6997217870677156`*^9, 3.699721818161825*^9}, {
   3.6997219544974575`*^9, 3.699721995148522*^9}, {3.6997220394499516`*^9, 
   3.6997220678207884`*^9}, {3.6997228579897976`*^9, 3.699722885407539*^9}, 
   3.6997233251485085`*^9, 3.6997241977457595`*^9, {3.699724402804263*^9, 
   3.6997244449194746`*^9}, {3.6997247433293123`*^9, 3.699724751913171*^9}, 
   3.699724824750454*^9, 3.699724877346713*^9, {3.6997254000649796`*^9, 
   3.6997254539733696`*^9}, 3.6997254985878305`*^9, 3.6997256212430954`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "scale", " ", "the", " ", "MONSA", " ", "data", " ", "so", " ", "that", 
    " ", "the", " ", "peak", " ", "heights", " ", "match", " ", "up"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sf", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{"ivsqSFF", ",", "Last"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{"iqMonsa", ",", "Last"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iqMonsaScaled", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"sf", "*", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
       "iqMonsa"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6997218457545843`*^9, 3.6997218861346216`*^9}, {
  3.6997251951014853`*^9, 3.6997252037253475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ivsqFull", ",", "ivsqSFF", ",", "iqMonsaScaled"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Scientific\>\"", ",", "\"\<BoldColors\>\"", ",", 
      "\"\<SansLabels\>\""}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q [\!\(\*SuperscriptBox[\(\[Angstrom]\), \(-1\)]\)]\>\"", ",", 
      "\"\<Intensity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Full\>\"", ",", "\"\<SFF\>\"", ",", "\"\<MONSA scaled\>\""}], 
     "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6996935898362184`*^9, 3.699693673493583*^9}, {
   3.6996938030285354`*^9, 3.6996938032835608`*^9}, {3.699721767197729*^9, 
   3.699721842542263*^9}, 3.6997218890159097`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.97, 0.606, 0.081], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.91, 0.318, 0.243], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
oU+RGzN8VdS2WZoXSUa1CvW84cZs504VSvHzoqmh68hImwd7InjytTieFyl7
2osr5vFgjd9iMtcv8aCJU90eJ6R4sdr6ZFPrMU5dqBwnvOUiL/b149ZTV7p5
UEdUxrgz4sVCeIX+fWngQV4s6swLHj7skfODQMFyHjQ7lnLwlBMf5jmny7r0
hQftOerhgYviw/yV6GDiNQ/a73HwNPEZH6auv8rv/4QHBUVET0X+5sNA75Ih
dwYPejfPBtYTfFhsXvzNt0k86OSm1tg783xYfxj/lFcUD7KycqJ7cmSTs/dk
tS/zoFM8Kb66HPnKKe55Lp//la9uG7Ka9OBBV68H5C8182ERCRfG+px5kLdS
+4+md3yYuOCD98O7eFDyzlfLW9L4MM1P1EiaGQ+6814hZuwsH6YgRlOQ0+NB
mnfrLRM1+bCMkiPn7DfxoPbZpN3+o7zYqcESLEWeB6UctH1IyeHFzk/ZXOwS
5UFOYziV8wd5MYlNZT2GnLra3Xlp/OsSD3b+UbLbExY3ihD/psaTwoOdmbtb
JbvIjaptXkW1KvJgifZe+JwxbnT861TungJu7GC4QI9+LzcKbqTvndjAjVGZ
GqatzdxoKC9jk2kGFfujPkKPreJGj2o3XelhUbD/6n9udL1XNnfkEAWjKV0Q
5P3AjXBZIW3/3pIxZqmiUt9LbjQjs3zp1AoXlpalzVeWzY3Mlm7n+WpwYQN5
Nm+L7nKj6M6ZSpozCVtwujH1JpkbyUurP/W5TsTiBHOffrrKjbStP24XfkbA
/glkfKgN4kY0411Hdj3DY1nscdKMLzdae6ofH5iLw4533vRbd4pjz2/P6L/3
2UCsdK7H5Qg36hPyHQv6zARDfX+17zlxo8Mr88Wut+nA8OyVnZM23Ejtz0TD
1eo18PPOZe5dgBuZZpN7me9XwfPn7a6F+tzoucSU1O6kFaAjyiunqsmNCk/y
LpraLoPW263bnipzowDqmEDjyhJwOXc2VUuaG4XlHyl3TlgGTsku3GWC3Kjk
F5eCr+QKiB8MSTxB5uD74+jT8mgFMF+oMASZVMR/w+uvKn0VCH4ZNy9foKLT
xnpBMh9pYN10uWXcOBX5p59yvr+TAc7fII059VGRcnvyN59iJrCqt5Le1EZF
bhfYNQx/NrivH/qNu46KrFh3VewycVieztyXxV9UFNig8HzhOB6LzTFmjn2j
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
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{}, {}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-8.771287054217341, -7.455318726218843}, 
     PlotRange -> {{-8.661104759728367, -1.6094379124341003`}, \
{-7.258768648889883, 4.927336145505607}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-8.771287054217341, -7.455318726218843}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Intensity\"", TraditionalForm], None}, {
        FormBox[
        "\"q [\\!\\(\\*SuperscriptBox[\\(\[Angstrom]\\), \\(-1\\)]\\)]\"", 
         TraditionalForm], None}}, FrameStyle -> Automatic, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 450, 
     LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.661104759728367, -1.6094379124341003`}, \
{-7.258768648889883, 4.927336145505607}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"Full\"", "\"SFF\"", "\"MONSA scaled\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22932000000000002`, 0.32741333333333333`, 
                    0.5995733333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.34398, 0.49112, 0.89936]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34398, 0.49112, 0.89936]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.34398, 0.49112, 0.89936], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97, 0.606, 0.081], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6466666666666667, 0.404, 0.054000000000000006`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97, 0.606, 0.081]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97, 0.606, 0.081]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97, 0.606, 0.081], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.91, 0.318, 0.243], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6066666666666667, 0.21200000000000002`, 0.162],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.91, 0.318, 0.243]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.91, 0.318, 0.243]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.91, 0.318, 0.243], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6997218327742863`*^9, 3.699721842838292*^9}, 
   3.6997218893829465`*^9, {3.6997219576317706`*^9, 3.6997219976497717`*^9}, {
   3.6997220420092077`*^9, 3.6997220693439407`*^9}, 3.6997233287408676`*^9, 
   3.699724429078891*^9, 3.6997248803180103`*^9, 3.6997254585618286`*^9, 
   3.6997254989388657`*^9, 3.699725621602131*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{906, 776},
WindowMargins->{{175, Automatic}, {Automatic, 63}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> True}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 395, 5, 71, "Section"],
Cell[CellGroupData[{
Cell[999, 31, 174, 3, 29, "Input"],
Cell[1176, 36, 5307, 73, 70, "Output"]
}, Open  ]],
Cell[6498, 112, 1045, 27, 120, "Input"],
Cell[7546, 141, 579, 13, 48, "Input"],
Cell[8128, 156, 223, 4, 48, "Input"],
Cell[CellGroupData[{
Cell[8376, 164, 108, 1, 36, "Subsection"],
Cell[8487, 167, 9661, 249, 588, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18185, 421, 447, 5, 28, "Subsection"],
Cell[18635, 428, 53789, 1173, 4054, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[72473, 1607, 695, 9, 41, "Section"],
Cell[CellGroupData[{
Cell[73193, 1620, 109, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[73327, 1625, 235, 5, 29, "Input"],
Cell[73565, 1632, 888, 22, 70, "Output"]
}, Open  ]],
Cell[74468, 1657, 659, 18, 66, "Input"],
Cell[CellGroupData[{
Cell[75152, 1679, 853, 20, 54, "Input"],
Cell[76008, 1701, 29933, 531, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[105990, 2238, 120, 1, 28, "Subsection"],
Cell[CellGroupData[{
Cell[106135, 2243, 531, 12, 48, "Input"],
Cell[106669, 2257, 270, 4, 29, "Output"]
}, Open  ]],
Cell[106954, 2264, 830, 21, 48, "Input"],
Cell[107787, 2287, 654, 17, 48, "Input"],
Cell[CellGroupData[{
Cell[108466, 2308, 1280, 32, 102, "Input"],
Cell[109749, 2342, 239, 3, 29, "Output"]
}, Open  ]],
Cell[110003, 2348, 841, 24, 66, "Input"],
Cell[110847, 2374, 628, 16, 48, "Input"],
Cell[111478, 2392, 321, 8, 48, "Input"],
Cell[CellGroupData[{
Cell[111824, 2404, 1787, 35, 120, "Input"],
Cell[CellGroupData[{
Cell[113636, 2443, 434, 6, 22, "Print"],
Cell[114073, 2451, 447, 6, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114569, 2463, 1530, 34, 120, "Input"],
Cell[CellGroupData[{
Cell[116124, 2501, 419, 6, 22, "Print"],
Cell[116546, 2509, 431, 6, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117026, 2521, 990, 23, 75, "Input"],
Cell[118019, 2546, 33808, 613, 306, "Output"]
}, Open  ]],
Cell[151842, 3162, 1263, 38, 66, "Input"],
Cell[CellGroupData[{
Cell[153130, 3204, 1031, 25, 75, "Input"],
Cell[154164, 3231, 58364, 1033, 306, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

